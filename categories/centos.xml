<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python Piura (Centos)</title><link>http://pythonpiura.org/</link><description></description><atom:link href="http://pythonpiura.org/categories/centos.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Sun, 24 Jul 2016 17:44:06 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Servir Aplicaciones Django con Apache y mod_wsgi en Centos 7</title><link>http://pythonpiura.org/posts/2016/04/14/servir-aplicaciones-django-con-apache-y-mod_wsgi-en-centos-7/</link><dc:creator>Miguel Amaya</dc:creator><description>&lt;p style="text-align:justify;"&gt;Para instalar un servidor de producción Django en Centos 7 usaremos Apache y mod_wsgi, mod_wsgi es un módulo de Apache, que permite servir aplicaciones hechas en Python, que tengan soporte para la interfaz WSGI.&lt;br&gt;
Los requisitos para esto son tener un servidor Centos 7 correctamente instalado y configurado y los permisos de root para poder hacer las instalaciones correspondientes. Para comenzar el proceso, vamos a descargar e instalar todos los elementos que necesitamos de los repositorios de la distribución. Esto incluirá el servidor web Apache, el módulo mod_wsgi utilizado para interactuar con nuestra aplicación Django, y pip. Para obtener pip, tendremos que habilitar el repositorio EPEL(paquetes para Linux Empresarial):&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
yum install epel-release&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Con EPEL habilitado nosotros podemos instalar los componentes tipeando:&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
yum install python-pip httpd mod_wsgi&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Ahora que ya tenemos instalados los paquetes necesarios, debemos crear un entorno virtual para ellos instalaremos virtualenv usando pip:&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
pip install virtualenv&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Ahora procedemos a crear nuestro entorno virtual:&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
virtualenv vproduccion&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Y lo activamos:&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
source vproduccion/bin/activate&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Cuando activamos el entorno virtual nuestro prompt debe cambiar y aparecer entre paréntesis el nombre del entorno virtual activado.&lt;br&gt;
Una vez que esto ha sucedido debemos instalar Django:&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
pip install django&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Cuando ya tengamos listo esto, subimos o creamos nuestro proyecto Django utilizando los comandos clásicos que ya hemos utilizado antes, ahora nos toca configurar Apache.&lt;br&gt;
Una vez que comprobamos que el proyecto Django está funcionando, podemos configurar Apache como un front-end. Las conexiones de cliente que recibe serán traducidos al formato WSGI que la aplicación Django espera utilizando el módulo mod_wsgi. Esto debería haber sido activado automáticamente después de la instalación anterior. Para configurar lo anterior, tendremos que crear un nuevo archivo de configuración en el directorio /etc/httpd/conf.d. Vamos a llamar a este archivo django.conf:&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
nano /etc/httpd/conf.d/django.conf&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Y dentro de él escribiremos lo siguiente:&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
#En mi caso la ruta es /home/jamaya y mi proyecto se llama siad&lt;br&gt;
#Configuración para mostrar correctamente losa archivos estáticos&lt;br&gt;
Alias /static /home/jamaya/siad/static&lt;br&gt;
&amp;lt;Directory /home/jamaya/siad/static&amp;gt;&lt;br&gt;
        Require all granted&lt;br&gt;
&amp;lt;/Directory&amp;gt;&lt;br&gt;
#Configuración para acceder correctamente al wsgi.py&lt;br&gt;
&amp;lt;Directory /home/jamaya/siad/siad/&amp;gt;&lt;br&gt;
&amp;lt;Files wsgi.py&amp;gt;&lt;br&gt;
        Require all granted&lt;br&gt;
&amp;lt;/Files&amp;gt;&lt;br&gt;
&amp;lt;/Directory&amp;gt;&lt;/p&gt;
&lt;p&gt;WSGIDaemonProcess siad python-path=/home/jamaya/siad:/home/jamaya/vproduccion/lib/python2.7/site-packages&lt;br&gt;
WSGIProcessGroup siad&lt;br&gt;
WSGIScriptAlias /siad /home/jamaya/siad/siad/wsgi.py&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;A continuación, tenemos que arreglar los permisos para que el servicio de Apache puede acceder a nuestros archivos. Por defecto CentOS bloquea el directorio personal de cada usuario de manera muy restrictiva. Para evitar esto, añadiremos el usuario apache al grupo de nuestro propio usuario. Esto nos permitirá abrir los permisos sólo lo suficiente para que pueda llegar a los archivos correspondientes.&lt;br&gt;
Añadimos el usuario apache a nuestro grupo, reemplazamos la palabra jamaya con nuestro usuario:&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
usermod -a -G jamaya apache&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Damos permisos al grupo en la carpeta personal, esto permitirá al proceso apache acceder a los archivos.&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
chmod 710 /home/jamaya&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Ya podemos iniciar el servicio de apache:&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
systemctl start httpd&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Vamos a probar si la carga del proyecto funciona, vamos a otra computadora de la red y colocamos la direccion ip de nuestro servidor y la aplicación:&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
http://172.20.30.129/siad&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Si hubiese algún problema lo mas rápido y sencillo es deshabilitar SELINUX, esto lo hacemos editando el archivo:&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
/etc/selinux/config&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Y cambiando la siguiente linea:&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
SELINUX=disabled&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Si todo funciona correctamente habilitamos el servicio apache para que se inicie automaticamente:&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
systemctl enable httpd&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Recuerden tener siempre su archivo requerimientos.txt o requirements.txt para instalar todas las dependendencias que hacen que nuestro proyecto funcione con éxito. Este archivo se obtiene en nuestro entorno de desarrollo escribiendo el siguiente comando:&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
pip freeze &amp;gt; requirements.txt&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Y para instalarlas en nuestro entorno de producción usamos el mismo comando con algunas variantes:&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
pip install -r requirements.txt&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;En el caso nuestro teniamos un par de dependencias un poco complicadas de instalar en Centos: Pillow y psycopg2, por lo que tuvimos algunos errores, para solucionarlos debemos instalar algunas librerias, en centos en el caso de psycopg2 tenemos:&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
yum install gcc&lt;br&gt;
yum install postgresql-devel python-devel&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Y en el caso de Pillow:&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
yum install libjpeg-devel zlib-devel&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Y listo eso es todo, ya tenemos nuestro servidor de producción.&lt;/p&gt;
&lt;p&gt;Saludos.&lt;/p&gt;
</description><category>Centos</category><category>Django</category><category>Python</category><guid>http://pythonpiura.org/posts/2016/04/14/servir-aplicaciones-django-con-apache-y-mod_wsgi-en-centos-7/</guid><pubDate>Fri, 15 Apr 2016 03:34:33 GMT</pubDate></item></channel></rss>