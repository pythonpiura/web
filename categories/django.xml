<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python Piura (Django)</title><link>http://pythonpiura.org/</link><description></description><atom:link href="http://pythonpiura.org/categories/django.xml" type="application/rss+xml" rel="self"></atom:link><language>es</language><lastBuildDate>Mon, 01 Aug 2016 21:20:59 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Reporte PDF en Django con Reportlab</title><link>http://pythonpiura.org/posts/2016/05/13/reporte-pdf-en-django-con-reportlab/</link><dc:creator>Comunidad Python Piura</dc:creator><description>&lt;div&gt;&lt;p&gt;Vamos a retomar nuestro proyecto tutorial, al que hemos tenido
bastante olvidado estos últimos días y haremos un reporte en pdf
utilizando la librería &lt;a class="reference external" href="http://www.reportlab.com/"&gt;reportlab&lt;/a&gt;, para ello la instalamos:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_13527231d4a5419c93ddc7424ecc9a31-1"&gt;&lt;/a&gt;pip install reportlab
&lt;/pre&gt;&lt;p&gt;Lo primero que haremos es poner el logo de django en la parte superior
de nuestro reporte, por lo que debemos tener la imagen guardada en una
ubicación fácil de obtener, por eso crearemos una carpeta llamada
“media” en nuestro proyecto y dentro de esta, otra carpeta llamada
imagenes, es aquí donde pondremos nuestro archivo logo_django.png:&lt;/p&gt;
&lt;img alt="/images/blog/ubicacion_logo.jpg" src="http://pythonpiura.org/images/blog/ubicacion_logo.jpg"&gt;
&lt;p&gt;Modificamos el archivo settings.py para poder establecer la ruta de la
carpeta media:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_92f41481ec9a4d2e9f6dba193779e716-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;MEDIA_ROOT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BASE_DIR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'media'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Creamos la clase ReportePersonasPDF en el archivo views.py, el código
está explicado en los comentarios:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#Importamos settings para poder tener a la mano la ruta de la carpeta media&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;io&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BytesIO&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;reportlab.pdfgen&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;canvas&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-5"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views.generic&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ReportePersonasPDF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;View&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-9"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cabecera&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-10"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#Utilizamos el archivo logo_django.png que está guardado en la carpeta media/imagenes&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-11"&gt;&lt;/a&gt;        &lt;span class="n"&gt;archivo_imagen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MEDIA_ROOT&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;'/imagenes/logo_django.png'&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-12"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#Definimos el tamaño de la imagen a cargar y las coordenadas correspondientes&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-13"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drawImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;archivo_imagen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;750&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;preserveAspectRatio&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-14"&gt;&lt;/a&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-15"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-16"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#Indicamos el tipo de contenido a devolver, en este caso un pdf&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-17"&gt;&lt;/a&gt;        &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'application/pdf'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-18"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#La clase io.BytesIO permite tratar un array de bytes como un fichero binario, se utiliza como almacenamiento temporal&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-19"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BytesIO&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-20"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#Canvas nos permite hacer el reporte con coordenadas X y Y&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-21"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;canvas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Canvas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-22"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#Llamo al método cabecera donde están definidos los datos que aparecen en la cabecera del reporte.&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-23"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cabecera&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-24"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#Con show page hacemos un corte de página para pasar a la siguiente&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-25"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showPage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-26"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-27"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getvalue&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-28"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-29"&gt;&lt;/a&gt;        &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d2608f31c000444cbe7b613d282bbf91-30"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Para poder acceder a esta clase debemos hacer la creación de la url
correspondiente en el archivo urls.py:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_25383995340c4d558697e6d82dd0112f-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r'^reporte_personas_pdf/$'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;login_required&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ReportePersonasPDF&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"reporte_personas_pdf"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Ahora vamos a utilizar la url desde el archivo personas.html:&lt;/p&gt;
&lt;pre class="code html"&gt;&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'form-group'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-2"&gt;&lt;/a&gt;    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"row"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-3"&gt;&lt;/a&gt;        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"col-lg-9"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-5"&gt;&lt;/a&gt;        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-6"&gt;&lt;/a&gt;        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"col-lg-1"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-7"&gt;&lt;/a&gt;            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{% url 'personas:reporte_personas_excel' %}"&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-info btn-block"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-8"&gt;&lt;/a&gt;                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"glyphicon glyphicon-list-alt"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-9"&gt;&lt;/a&gt;            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-10"&gt;&lt;/a&gt;        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-11"&gt;&lt;/a&gt;        {% if perms.personas.add_persona %}
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-12"&gt;&lt;/a&gt;        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"col-lg-1"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-13"&gt;&lt;/a&gt;            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{% url 'personas:crear_persona' %}"&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-info btn-block"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-14"&gt;&lt;/a&gt;                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"glyphicon glyphicon-plus"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-15"&gt;&lt;/a&gt;            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-16"&gt;&lt;/a&gt;        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-17"&gt;&lt;/a&gt;        {% endif %}
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-18"&gt;&lt;/a&gt;        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"col-lg-1"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-19"&gt;&lt;/a&gt;            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{% url 'personas:reporte_personas_pdf' %}"&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-info btn-block"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-20"&gt;&lt;/a&gt;                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"glyphicon glyphicon-file"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-21"&gt;&lt;/a&gt;            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-22"&gt;&lt;/a&gt;        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-23"&gt;&lt;/a&gt;    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b72bf9d87de2466aa62d45c3dd70a23a-24"&gt;&lt;/a&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Nos tiene que aparecer un ícono de un archivo:&lt;/p&gt;
&lt;img alt="/images/blog/personas_pdf.jpg" src="http://pythonpiura.org/images/blog/personas_pdf.jpg"&gt;
&lt;p&gt;El primer resultado será este:&lt;/p&gt;
&lt;img alt="/images/blog/reporte_pdf1.jpg" src="http://pythonpiura.org/images/blog/reporte_pdf1.jpg"&gt;
&lt;p&gt;Vamos a ponerle un encabezado a nuestro reporte que diga “Python
Piura” y debajo “Reporte de Personas”, para ello colocamos el
siguiente código debajo de la última linea del método “cabecera”:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_8b075459fed94bb1adf6fe764d69635f-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#Establecemos el tamaño de letra en 16 y el tipo de letra Helvetica&lt;/span&gt;
&lt;a name="rest_code_8b075459fed94bb1adf6fe764d69635f-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Helvetica"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_8b075459fed94bb1adf6fe764d69635f-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#Dibujamos una cadena en la ubicación X,Y especificada&lt;/span&gt;
&lt;a name="rest_code_8b075459fed94bb1adf6fe764d69635f-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drawString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;230&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;790&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;u"PYTHON PIURA"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_8b075459fed94bb1adf6fe764d69635f-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setFont&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Helvetica"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_8b075459fed94bb1adf6fe764d69635f-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drawString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;770&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;u"REPORTE DE PERSONAS"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;img alt="/images/blog/reporte_pdf2.jpg" src="http://pythonpiura.org/images/blog/reporte_pdf2.jpg"&gt;
&lt;p&gt;Visualizaremos la tabla de personas, por lo que creamos el método
tabla en la clase ReportePersonasPDF:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tabla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-2"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#Creamos una tupla de encabezados para neustra tabla&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-3"&gt;&lt;/a&gt;        &lt;span class="n"&gt;encabezados&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'DNI'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Nombre'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Apellido Paterno'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Apellido Materno'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-4"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#Creamos una lista de tuplas que van a contener a las personas&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-5"&gt;&lt;/a&gt;        &lt;span class="n"&gt;detalles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;persona&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dni&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;persona&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nombre&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;persona&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apellido_paterno&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;persona&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apellido_materno&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;persona&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Persona&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-6"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#Establecemos el tamaño de cada una de las columnas de la tabla&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;detalle_orden&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Table&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;encabezados&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;detalles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;colWidths&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-8"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#Aplicamos estilos a las celdas de la tabla&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-9"&gt;&lt;/a&gt;        &lt;span class="n"&gt;detalle_orden&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setStyle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TableStyle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-10"&gt;&lt;/a&gt;        &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-11"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#La primera fila(encabezados) va a estar centrada&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-12"&gt;&lt;/a&gt;                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'ALIGN'&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="s1"&gt;'CENTER'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-13"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Los bordes de todas las celdas serán de color negro y con un grosor de 1&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-14"&gt;&lt;/a&gt;                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GRID'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;black&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-15"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#El tamaño de las letras de cada una de las celdas será de 10&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-16"&gt;&lt;/a&gt;                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'FONTSIZE'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-17"&gt;&lt;/a&gt;                &lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-18"&gt;&lt;/a&gt;        &lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-19"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#Establecemos el tamaño de la hoja que ocupará la tabla&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-20"&gt;&lt;/a&gt;        &lt;span class="n"&gt;detalle_orden&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wrapOn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-21"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#Definimos la coordenada donde se dibujará la tabla&lt;/span&gt;
&lt;a name="rest_code_ff3cb90a32c84c3d8025dbe5e4a2a56c-22"&gt;&lt;/a&gt;        &lt;span class="n"&gt;detalle_orden&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drawOn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Veamos como queda nuestro método get ahora con la nueva llamada al
método tabla:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_373e653f77774bdeac488c75e5e18b29-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_373e653f77774bdeac488c75e5e18b29-2"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#Indicamos el tipo de contenido a devolver, en este caso un pdf&lt;/span&gt;
&lt;a name="rest_code_373e653f77774bdeac488c75e5e18b29-3"&gt;&lt;/a&gt;        &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'application/pdf'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_373e653f77774bdeac488c75e5e18b29-4"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#La clase io.BytesIO permite tratar un array de bytes como un fichero binario, se utiliza como almacenamiento temporal&lt;/span&gt;
&lt;a name="rest_code_373e653f77774bdeac488c75e5e18b29-5"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BytesIO&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_373e653f77774bdeac488c75e5e18b29-6"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#Canvas nos permite hacer el reporte con coordenadas X y Y&lt;/span&gt;
&lt;a name="rest_code_373e653f77774bdeac488c75e5e18b29-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;canvas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Canvas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_373e653f77774bdeac488c75e5e18b29-8"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#Llamo al método cabecera donde están definidos los datos que aparecen en la cabecera del reporte.&lt;/span&gt;
&lt;a name="rest_code_373e653f77774bdeac488c75e5e18b29-9"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cabecera&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_373e653f77774bdeac488c75e5e18b29-10"&gt;&lt;/a&gt;        &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;
&lt;a name="rest_code_373e653f77774bdeac488c75e5e18b29-11"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tabla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_373e653f77774bdeac488c75e5e18b29-12"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#Con show page hacemos un corte de página para pasar a la siguiente&lt;/span&gt;
&lt;a name="rest_code_373e653f77774bdeac488c75e5e18b29-13"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showPage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_373e653f77774bdeac488c75e5e18b29-14"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_373e653f77774bdeac488c75e5e18b29-15"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getvalue&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_373e653f77774bdeac488c75e5e18b29-16"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_373e653f77774bdeac488c75e5e18b29-17"&gt;&lt;/a&gt;        &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_373e653f77774bdeac488c75e5e18b29-18"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Y este será el resultado final:&lt;/p&gt;
&lt;img alt="/images/blog/reporte_pdf3.jpg" src="http://pythonpiura.org/images/blog/reporte_pdf3.jpg"&gt;
&lt;p&gt;Eso es todo por hoy.
Saludos.&lt;/p&gt;&lt;/div&gt;</description><category>Django</category><category>Python</category><category>reportlab</category><guid>http://pythonpiura.org/posts/2016/05/13/reporte-pdf-en-django-con-reportlab/</guid><pubDate>Sat, 14 May 2016 02:58:34 GMT</pubDate></item><item><title>Otro Ejemplo de Web Scrapping con Python</title><link>http://pythonpiura.org/posts/2016/05/10/otro-ejemplo-de-web-scrapping-con-python/</link><dc:creator>Comunidad Python Piura</dc:creator><description>&lt;div&gt;&lt;p&gt;En esta oportunidad vamos a compartir con ustedes un nuevo script para
consultar rucs de manera masiva a partir del DNI en la página web de
sunat, esto ha sido un poco mas complejo debido a que la página en
cuestión usa frames, también hemos mejorado un poquito el problema de
los tamaños haciendo el recorte a partir del tamaño de la captura de
pantalla:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium.webdriver.common.by&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;By&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium.webdriver.support.wait&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;WebDriverWait&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-5"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium.webdriver.support&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;expected_conditions&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;EC&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-6"&gt;&lt;/a&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-7"&gt;&lt;/a&gt;        &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;Image&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ImportError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-9"&gt;&lt;/a&gt;        &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-10"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pytesseract&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-12"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;ir_sunat_web&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dni&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-13"&gt;&lt;/a&gt;        &lt;span class="n"&gt;driver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Firefox&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-14"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#Fijamos nuestra página objetivo&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-15"&gt;&lt;/a&gt;        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"http://ww1.sunat.gob.pe/cl-ti-itmrconsruc/jcrS00Alias"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-16"&gt;&lt;/a&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-17"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Debido a que la página tiene frames debemos hacer el cambio al frame con nombre "leftFrame"&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-18"&gt;&lt;/a&gt;                &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;switch_to_frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"leftFrame"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-19"&gt;&lt;/a&gt;        &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-20"&gt;&lt;/a&gt;                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-21"&gt;&lt;/a&gt;                &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-22"&gt;&lt;/a&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-23"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Obtenemos los radio buttons que nos permiten seleccionar el tipo de búsqueda a hacer&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-24"&gt;&lt;/a&gt;                &lt;span class="n"&gt;radios&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_elements_by_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"tQuery"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-25"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Seleccionamos la búsqueda por DNI&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-26"&gt;&lt;/a&gt;                &lt;span class="n"&gt;radios&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-27"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Obtenemos la caja de texto donde se ingresa el DNI&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-28"&gt;&lt;/a&gt;                &lt;span class="n"&gt;documento&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"search2"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-29"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Escribimos el DNI&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-30"&gt;&lt;/a&gt;                &lt;span class="n"&gt;documento&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dni&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-31"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Esperamos hasta que el texto esté escrito en la caja de texto del DNI&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-32"&gt;&lt;/a&gt;                &lt;span class="n"&gt;WebDriverWait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;until&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EC&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text_to_be_present_in_element_value&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"search2"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;dni&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-33"&gt;&lt;/a&gt;        &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-34"&gt;&lt;/a&gt;                &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-35"&gt;&lt;/a&gt;                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-36"&gt;&lt;/a&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-37"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Esperamos hasta que se cargue la imagen con el captcha&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-38"&gt;&lt;/a&gt;                &lt;span class="n"&gt;WebDriverWait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;until&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EC&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;presence_of_element_located&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"imagen"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-39"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Hacemos la captura de pantalla correspondiente&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-40"&gt;&lt;/a&gt;                &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save_screenshot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"screenshot.jpg"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-41"&gt;&lt;/a&gt;                &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'screenshot.jpg'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-42"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Obtenemos el ancho y el largo de la imagen&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-43"&gt;&lt;/a&gt;                &lt;span class="n"&gt;ancho&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-44"&gt;&lt;/a&gt;                &lt;span class="n"&gt;alto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-45"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Recortamos la parte del captcha teniendo en cuenta el ancho y el largo de la imagen&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-46"&gt;&lt;/a&gt;                &lt;span class="n"&gt;img_recortada&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;crop&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;ancho&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;1.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;alto&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ancho&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;1.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;alto&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;6.9&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-47"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Guardamos el recorte&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-48"&gt;&lt;/a&gt;                &lt;span class="n"&gt;img_recortada&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"recorte.jpg"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-49"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Obtenemos el texto del captcha&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-50"&gt;&lt;/a&gt;                &lt;span class="n"&gt;captcha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pytesseract&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;image_to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img_recortada&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-51"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Obtenemos la caja de texto donde se escribe el texto del captcha&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-52"&gt;&lt;/a&gt;                &lt;span class="n"&gt;codigo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"codigo"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-53"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Escribimos el texto&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-54"&gt;&lt;/a&gt;                &lt;span class="n"&gt;codigo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;captcha&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-55"&gt;&lt;/a&gt;        &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-56"&gt;&lt;/a&gt;                &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-57"&gt;&lt;/a&gt;                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-58"&gt;&lt;/a&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-59"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Obtenemos el botón de búsqueda&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-60"&gt;&lt;/a&gt;                &lt;span class="n"&gt;boton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element_by_class_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"form-button"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-61"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Damos click al botón de búsqueda&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-62"&gt;&lt;/a&gt;                &lt;span class="n"&gt;boton&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-63"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Cambiamos al frame por defecto&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-64"&gt;&lt;/a&gt;                &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;switch_to_default_content&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-65"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Cambiamos al frame llamado "mainFrame" que contiene la tabla de resultados con un enlace conteniendo el ruc&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-66"&gt;&lt;/a&gt;                &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;switch_to_frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"mainFrame"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-67"&gt;&lt;/a&gt;        &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-68"&gt;&lt;/a&gt;                &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-69"&gt;&lt;/a&gt;                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-70"&gt;&lt;/a&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-71"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Esperamos que se cargue la tabla de resultados&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-72"&gt;&lt;/a&gt;                &lt;span class="n"&gt;WebDriverWait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;until&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EC&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;presence_of_element_located&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CLASS_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"form-table"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-73"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Obtenemos el enlace que contiene al RUC&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-74"&gt;&lt;/a&gt;                &lt;span class="n"&gt;enlace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_element&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TAG_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-75"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Le damos click al enlace&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-76"&gt;&lt;/a&gt;                &lt;span class="n"&gt;enlace&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-77"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Ahora si tenemos una tabla que contiene el detalle de los resultados del RUC consultado&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-78"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Obtenemos todas las filas&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-79"&gt;&lt;/a&gt;                &lt;span class="n"&gt;trs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_elements&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TAG_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"tr"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-80"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Obtenemos las celdas de la primera fila&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-81"&gt;&lt;/a&gt;                &lt;span class="n"&gt;tds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;trs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_elements&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TAG_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"td"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-82"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#A la segunda celda la partimos ya que tiene el ruc y la razón social separados por un guión&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-83"&gt;&lt;/a&gt;                &lt;span class="n"&gt;primera_linea&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-84"&gt;&lt;/a&gt;                &lt;span class="n"&gt;ruc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;primera_linea&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-85"&gt;&lt;/a&gt;                &lt;span class="n"&gt;razon_social&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;primera_linea&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-86"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Obtenemos la segunda linea que tiene el tipo de contribuyente&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-87"&gt;&lt;/a&gt;                &lt;span class="n"&gt;tds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;trs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_elements&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TAG_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"td"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-88"&gt;&lt;/a&gt;                &lt;span class="n"&gt;tipo_contribuyente&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-89"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;#Obtenemos la dirección&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-90"&gt;&lt;/a&gt;                &lt;span class="n"&gt;tds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;trs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_elements&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TAG_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"td"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-91"&gt;&lt;/a&gt;                &lt;span class="n"&gt;direccion&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-92"&gt;&lt;/a&gt;        &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-93"&gt;&lt;/a&gt;                &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-94"&gt;&lt;/a&gt;                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-95"&gt;&lt;/a&gt;        &lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-96"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#Devolvemos una lista con los resultados.&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-97"&gt;&lt;/a&gt;        &lt;span class="n"&gt;datos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ruc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;razon_social&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;tipo_contribuyente&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;direccion&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-98"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;datos&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-99"&gt;&lt;/a&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-100"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-101"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#Ingresar DNI&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-102"&gt;&lt;/a&gt;        &lt;span class="n"&gt;dni&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'12345678'&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-103"&gt;&lt;/a&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;ir_sunat_web&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dni&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-104"&gt;&lt;/a&gt;
&lt;a name="rest_code_06314a8f15c343409ab8452e3aeb65e5-105"&gt;&lt;/a&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;iframe width="459" height="344" src="https://www.youtube.com/embed/ijICFYtAuDE?feature=oembed" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;Esperamos que les sea útil.
Saludos.&lt;/p&gt;&lt;/div&gt;</description><category>Django</category><category>pytesseract</category><category>Selenium</category><guid>http://pythonpiura.org/posts/2016/05/10/otro-ejemplo-de-web-scrapping-con-python/</guid><pubDate>Wed, 11 May 2016 04:35:39 GMT</pubDate></item><item><title>Aplicar Permisos por Usuario en Django</title><link>http://pythonpiura.org/posts/2016/04/28/permisos-basicos-en-django/</link><dc:creator>Comunidad Python Piura</dc:creator><description>&lt;p style="text-align:justify;"&gt;Hasta ahora solo hemos trabajado con un usuario(el superusuario que creamos al principio) en nuestro proyecto, pero en la vida real son muchos los usuarios que interactuan con el software y todos no cuentan con los mismos permisos, hay algunos que pueden crear, ver, editar o eliminar elementos y otros no. Para empezar a trabajar con permisos primero debemos crear algunos usuarios adicionales, para ello vamos a ingresar a la consola de administración de Django, poniendo lo siguiente en nuestra barra de direcciones:&lt;/p&gt;
&lt;p&gt;http://localhost:8000/admin&lt;/p&gt;
&lt;p&gt;A continuación veremos una pantalla como esta:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/login_administracion.jpg"&gt;&lt;img class="aligncenter size-medium wp-image-223" src="https://pythonpiura.files.wordpress.com/2016/04/login_administracion.jpg?w=300" alt="login_administracion" width="300" height="127"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Aquí nos logueamos usando el superusuario con el que hemos venido trabajando y tendremos una pantalla como esta:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/admin_django.jpg"&gt;&lt;img class="aligncenter size-medium wp-image-224" src="https://pythonpiura.files.wordpress.com/2016/04/admin_django.jpg?w=300" alt="admin_django" width="300" height="61"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;En el enlace donde dice Users vamos a dar click en Add para crear nuestro nuevo usuario, al que llamaremos usuario1:&lt;br&gt;
&lt;a href="http://pythonpiura.org/2016/04/crear_usuario.jpg"&gt;&lt;img class="aligncenter size-medium wp-image-225" src="https://pythonpiura.files.wordpress.com/2016/04/crear_usuario.jpg?w=300" alt="crear_usuario" width="300" height="88"&gt;&lt;/a&gt;&lt;br&gt;
Completamos los campos y le damos click a save:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/usuario_creado.jpg"&gt;&lt;img class="aligncenter size-medium wp-image-226" src="https://pythonpiura.files.wordpress.com/2016/04/usuario_creado.jpg?w=300" alt="usuario_creado" width="300" height="207"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Por ahora con esto es suficiente y ya tenemos nuestro usuario creado y listo para usarlo, salimos dando click en logout y nos vamos al login del proyecto para ingresar con nuestro nuevo usuario y la contraseña que le hemos asignado:&lt;br&gt;
&lt;a href="http://pythonpiura.org/2016/04/nuevo_logueo.jpg"&gt;&lt;img class="aligncenter size-medium wp-image-227" src="https://pythonpiura.files.wordpress.com/2016/04/nuevo_logueo.jpg?w=300" alt="nuevo_logueo" width="300" height="210"&gt;&lt;/a&gt;&lt;br&gt;
En nuestra aplicación personas, con este usuario podemos hacer lo mismo que con el usuario anterior, pero que pasa si nosotros queremos restringir algunas cosas a este nuevo usuario, por ejemplo, no dejar que este usuario cree ni modifique personas, pero que si pueda ver su detalle y exportar el reporte en una hoja de calculo ¿Cómo hacemos esto?&lt;br&gt;
Con Django otra vez esto es muy sencillo y podemos definir diferentes niveles de acceso, restringiendo las opciones en la plantilla html y negando el acceso a la vista en cuestión, hagamos lo primero:&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Si queremos restringir el acceso a las opciones desde la plantilla html, lo mas rápido que se nos ocurre es eliminar los íconos que nos brindan esas opciones, esto lo podemos hacer usando los permisos proporcionados por django de la siguiente manera:&lt;br&gt;
Primero para restringir la visualización del ícono de crear personas:&lt;br&gt;
personas.html&lt;/p&gt;
&lt;p&gt;[sourcecode language="html"]&lt;br&gt;
{% if perms.personas.add_persona %}&lt;/p&gt;
&lt;p&gt;&amp;lt;div class="col-lg-1"&amp;gt;&lt;br&gt;
	&amp;lt;a id="crear_detalle" href="reporte_personas_excel’ %}" class="btn btn-info btn-block"&amp;gt;&lt;br&gt;
		&amp;lt;span class="glyphicon glyphicon-list-alt"&amp;gt;&amp;lt;/span&amp;gt;&lt;br&gt;
	&amp;lt;/a&amp;gt;&lt;br&gt;
&amp;lt;/div&amp;gt;&lt;/p&gt;
&lt;p&gt;{% endif %}&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Si observamos detenidamente hemos agregado en la parte superior del div del enlace un condicional que utilizar una variable llamada perms, en esta variable se almacenan los permisos de los que dispone el usuario que ha iniciado sesión, luego de perms podemos observar el nombre de la aplicación, en nuestro caso personas, y finalmente tenemos el permiso llamado add y el modelo persona que configuran el permiso add_persona, esta condificional nos dice, si el usuario tiene el permiso add_persona, entonces se debe renderizar el div, sino no hace nada.&lt;br&gt;
Si ejecutamos nuestra aplicación observamos lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/no_crear1.jpg"&gt;&lt;img class="aligncenter size-medium wp-image-232" src="https://pythonpiura.files.wordpress.com/2016/04/no_crear1.jpg?w=300" alt="no_crear" width="300" height="119"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;El ícono de agregar ya no aparece, pero todavía no podemos cantar victoria, un usuario avispado puede recordar la url de creación de personas y tipearla directamente en la barra de direcciones:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/crear_persona.jpg"&gt;&lt;img class="aligncenter size-medium wp-image-229" src="https://pythonpiura.files.wordpress.com/2016/04/crear_persona.jpg?w=300" alt="crear_persona" width="300" height="229"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Mmmm, vemos que si puede ingresar ¿Cómo hacemos para restringir eso? Nuestros viejos amigos los decoradores vuelven nuevamente a nuestro auxilio, para ello debemos editar el archivo views.py:&lt;/p&gt;
&lt;p&gt;[sourcecode language="python"]&lt;br&gt;
from django.contrib.auth.decorators import permission_required&lt;br&gt;
from django.utils.decorators import method_decorator&lt;br&gt;
class CrearPersona(CreateView):&lt;br&gt;
    model = Persona&lt;br&gt;
    fields =['dni','nombre','apellido_paterno','apellido_materno']&lt;br&gt;
    template_name = ‘crear_persona.html’&lt;br&gt;
    success_url = reverse_lazy(‘personas:personas’)&lt;/p&gt;
&lt;p&gt;    @method_decorator(permission_required(‘personas.add_persona’,reverse_lazy(‘personas:personas’)))&lt;br&gt;
    def dispatch(self, *args, **kwargs):&lt;br&gt;
        return super(CrearPersona, self).dispatch(*args, **kwargs)&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Expliquemos esto que está un poco endiablado:&lt;br&gt;
Un método sobre una clase no equivale realmente a una función independiente, por lo que se debe transformar en un decorador primero, el decorador @method_decorator transforma un decorador de una función en un decorador de un método a fin de que puede ser usado sobre una instancia de un método, en el caso de las vistas basadas en clase a quien debemos aplicar el decorador es al método dispatch, en este ejemplo, cada instancia de CrearPersona tendrá protección de permission_required.&lt;br&gt;
El punto de entrada as_view() crea una instancia de la clase y llama al método dispatch(), (el despachador o resolvedor de URL) que busca la petición para determinar si es un GET, POST, etc, y releva la petición a un método que coincida con uno definido, o levante una excepción HttpResponseNotAllowed si no encuentra coincidencias.&lt;br&gt;
A la función permission_required se le deben pasar dos argumentos:&lt;br&gt;
El primero es el permiso a verificar que en este caso es add_persona y tiene la misma notación, primero la aplicación y luego el permiso.&lt;br&gt;
El segundo es la url a donde debe ser direccionado el usuario en caso de no tener el permiso necesario, en este caso a la url personas.&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Ahora pongamos nuevamente la url anterior y veamos que nos sale:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/permiso_denegado.jpg"&gt;&lt;img class="aligncenter size-medium wp-image-230" src="https://pythonpiura.files.wordpress.com/2016/04/permiso_denegado.jpg?w=300" alt="permiso_denegado" width="300" height="142"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Bueno con esto ya nos aseguramos que el usuario “usuario1″ no va a poder entrar de ninguna manera a la funcionalidad de creación de personas, ahora lo que falta es aplicar lo mismo a la vista ModificarPersona las demás vistas tendrá un tratamiento especial en un artículo posterior:&lt;/p&gt;
&lt;p&gt;personas.html&lt;/p&gt;
&lt;p&gt;[sourcecode language="html"]&lt;/p&gt;
&lt;p&gt;&amp;lt;tbody&amp;gt;&lt;br&gt;
{% for persona in personas %}&lt;br&gt;
	&amp;lt;tr&amp;gt;&lt;br&gt;
		&amp;lt;td&amp;gt;{{ persona.dni }}&amp;lt;/td&amp;gt;&lt;br&gt;
		&amp;lt;td&amp;gt;{{ persona.nombre }}&amp;lt;/td&amp;gt;&lt;br&gt;
		&amp;lt;td&amp;gt;{{ persona.apellido_paterno }}&amp;lt;/td&amp;gt;&lt;br&gt;
		&amp;lt;td&amp;gt;{{ persona.apellido_materno }}&amp;lt;/td&amp;gt;&lt;br&gt;
		&amp;lt;td class="text-center"&amp;gt;&lt;br&gt;
			&amp;lt;a class="btn btn-small" href="{% url ‘personas:detalle_persona’ persona.pk %}"&amp;gt;&lt;br&gt;
				&amp;lt;span class="glyphicon glyphicon-folder-open"&amp;gt;&amp;lt;/span&amp;gt;&lt;br&gt;
			&amp;lt;/a&amp;gt;&lt;br&gt;
			{% if perms.personas.change_persona %}&lt;br&gt;
			&amp;lt;a class="btn btn-small" href="{% url ‘personas:modificar_persona’ persona.pk %}"&amp;gt;&lt;br&gt;
				&amp;lt;span class="glyphicon glyphicon-pencil"&amp;gt;&amp;lt;/span&amp;gt;&lt;br&gt;
			&amp;lt;/a&amp;gt;&lt;br&gt;
			{% endif %}&lt;br&gt;
		&amp;lt;/td&amp;gt;&lt;br&gt;
	&amp;lt;/tr&amp;gt;&lt;br&gt;
{% endfor %}&lt;br&gt;
&amp;lt;/tbody&amp;gt;&lt;/p&gt;
&lt;p&gt;[/sourcecode]&lt;/p&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;p&gt;[sourcecode language="python"]&lt;br&gt;
class ModificarPersona(UpdateView):&lt;br&gt;
    model = Persona&lt;br&gt;
    template_name = ‘modificar_persona.html’&lt;br&gt;
    fields = ['dni','nombre','apellido_paterno','apellido_materno']&lt;br&gt;
    success_url = reverse_lazy(‘personas:personas’)&lt;/p&gt;
&lt;p&gt;    @method_decorator(permission_required(‘personas.change_persona’,reverse_lazy(‘personas:personas’)))&lt;br&gt;
    def dispatch(self, *args, **kwargs):&lt;br&gt;
        return super(ModificarPersona, self).dispatch(*args, **kwargs)&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Notamos que el permiso ahora se llama change_persona, detengamonos un poco aquí y expliquemos esto, por defecto django aplica tres permisos a cada uno de nuestros modelos: add, change y delete, que especifican si un usuario puede crear, modificar o borrar un elemento de un modelo dado, en este caso el modelo es persona.&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Si corremos nuestra proyecto tenemos lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/sin_accesos.jpg"&gt;&lt;img class="aligncenter size-medium wp-image-233" src="https://pythonpiura.files.wordpress.com/2016/04/sin_accesos.jpg?w=300" alt="sin_accesos" width="300" height="113"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Nótese que ya no aparece el lápiz de edición y tampoco se puede acceder con el url de modificar directamente en la barra de direcciones.&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Ahora vamos a crear un nuevo usuario llamado usuario2, al que si le vamos a dar los permisos de crear y modificar, repetimos los pasos para crear el usuario en la interfaz de administración y nos detenemos en la ventana posterior a la creación del usuario, en la opción de permisos:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/permisos.jpg"&gt;&lt;img class="aligncenter size-medium wp-image-234" src="https://pythonpiura.files.wordpress.com/2016/04/permisos.jpg?w=300" alt="permisos" width="300" height="86"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;En esta opción tenemos un sinnumero de permisos, busquemos los relacionados a la aplicación personas y al modelo persona y los seleccionamos:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/seleccionar_permisos.jpg"&gt;&lt;img class="aligncenter size-medium wp-image-235" src="https://pythonpiura.files.wordpress.com/2016/04/seleccionar_permisos.jpg?w=300" alt="seleccionar_permisos" width="300" height="89"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Seleccionamos la flechita entre los dos cuadros y le damos al botón Save:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/escoger.jpg"&gt;&lt;img class="aligncenter size-medium wp-image-236" src="https://pythonpiura.files.wordpress.com/2016/04/escoger.jpg?w=300" alt="escoger" width="300" height="78"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Con esto ya tenemos que el usuario “usuario2″ tiene los permisos asignados. Ahora salgamos de la interfaz de administración e ingresemos a nuestro proyecto con el “usuario2″:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/con_permisos.jpg"&gt;&lt;img class="aligncenter size-medium wp-image-237" src="https://pythonpiura.files.wordpress.com/2016/04/con_permisos.jpg?w=300" alt="con_permisos" width="300" height="115"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Listo ahora si el usuario2, ya tendrá estos permisos básicos y el usuario1 no, el usuario mamaya es superusuario por lo tanto puede ingresar donde quiera.&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Eso es todo.&lt;br&gt;
Saludos.&lt;/p&gt;
</description><category>Django</category><guid>http://pythonpiura.org/posts/2016/04/28/permisos-basicos-en-django/</guid><pubDate>Fri, 29 Apr 2016 03:33:04 GMT</pubDate></item><item><title>Logout y Protección de Vistas en Django</title><link>http://pythonpiura.org/posts/2016/04/27/logout-y-proteccion-de-vistas-en-django/</link><dc:creator>Comunidad Python Piura</dc:creator><description>&lt;p style="text-align:justify;"&gt;En el post anterior habiamos creado un login con Django ahora nos toca hacer lo mismo pero para salir de la sesión que habiamos iniciado, para ello vamos a modificar nuestro archivo urls.py para crear la url llamada salir que invoca al método logout definido en django:&lt;/p&gt;
&lt;p&gt;[sourcecode language="python"]&lt;br&gt;
from django.conf.urls import patterns, url&lt;br&gt;
from seguridad.views import Login&lt;br&gt;
from django.contrib.auth.views import logout&lt;/p&gt;
&lt;p&gt;urlpatterns = patterns(”,&lt;br&gt;
    url(r’^$’, Login.as_view(), name="login"),&lt;br&gt;
    url(r’^salir$’, logout, name="salir", kwargs={‘next_page’: ‘/’}),&lt;br&gt;
)&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Como podemos observar llamamos a la vista logout de django.contrib.auth.views, que nos permite terminar la sesión que hemos iniciado pasandole el argumento next_page que nos redirecciona a la url raiz de nuestro proyecto, osea al login.&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Ahora vamos a utilizar la url creada, hacemos una modificación a nuestro archivo base.html para agregar un enlace de salida:&lt;/p&gt;
&lt;p&gt;[sourcecode language="html"]&lt;br&gt;
{% load staticfiles %}&lt;br&gt;
&amp;lt;!DOCTYPE html&amp;gt;&lt;br&gt;
&amp;lt;html&amp;gt;&lt;br&gt;
	&amp;lt;head&amp;gt;&lt;br&gt;
		&amp;lt;meta charset="utf-8"&amp;gt;&lt;br&gt;
	    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt;&lt;br&gt;
	    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1"&amp;gt;&lt;br&gt;
	    &amp;lt;meta name="description" content=""&amp;gt;&lt;br&gt;
	    &amp;lt;meta name="author" content=""&amp;gt;&lt;br&gt;
		&amp;lt;title&amp;gt;Ejemplo Círculo de Programadores de Python Piura&amp;lt;/title&amp;gt;&lt;br&gt;
		&amp;lt;link rel="stylesheet" type="text/css" href="{% static "css/bootstrap.min.css" %}"&amp;gt;&lt;br&gt;
		&amp;lt;link rel="stylesheet" type="text/css" href="{% static "css/jquery.dataTables.min.css"  %}"  /&amp;gt;&lt;br&gt;
		&amp;lt;script src="{% static "js/jquery.js" %}"&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;
	    &amp;lt;script src="{% static "js/bootstrap.min.js" %}"&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;
	    &amp;lt;script src="{% static "js/jquery.dataTables.min.js" %}"&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;
	&amp;lt;/head&amp;gt;&lt;br&gt;
	&amp;lt;body&amp;gt;&lt;br&gt;
		&amp;lt;div id="wrapper"&amp;gt;&lt;br&gt;
			&amp;lt;nav class="navbar navbar-default navbar-static-top" role="navigation" style="margin-bottom: 0"&amp;gt;&lt;br&gt;
				&amp;lt;div class="navbar-header"&amp;gt;&lt;br&gt;
			        &amp;lt;button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse"&amp;gt;&lt;br&gt;
			            &amp;lt;span class="sr-only"&amp;gt;Desplegar navegación&amp;lt;/span&amp;gt;&lt;br&gt;
			            &amp;lt;span class="icon-bar"&amp;gt;&amp;lt;/span&amp;gt;&lt;br&gt;
			            &amp;lt;span class="icon-bar"&amp;gt;&amp;lt;/span&amp;gt;&lt;br&gt;
			            &amp;lt;span class="icon-bar"&amp;gt;&amp;lt;/span&amp;gt;&lt;br&gt;
			        &amp;lt;/button&amp;gt;&lt;br&gt;
			        &amp;lt;a class="navbar-brand" href="{% url ‘personas:bienvenida’ %}"&amp;gt;&lt;br&gt;
						&amp;lt;span class="glyphicon glyphicon-home"&amp;gt;&amp;lt;/span&amp;gt; Inicio&lt;br&gt;
					&amp;lt;/a&amp;gt;&lt;br&gt;
					&amp;lt;a class="navbar-brand" href="{% url ‘personas:personas’ %}"&amp;gt;&lt;br&gt;
						&amp;lt;span class="glyphicon glyphicon-user"&amp;gt;&amp;lt;/span&amp;gt; Personas&lt;br&gt;
					&amp;lt;/a&amp;gt;&lt;br&gt;
			    &amp;lt;/div&amp;gt;&lt;br&gt;
			    &amp;lt;div class="navbar-right"&amp;gt;&lt;br&gt;
					&amp;lt;a class="navbar-brand" href="{% url ‘seguridad:salir’ %}"&amp;gt;&lt;br&gt;
						&amp;lt;span class="glyphicon glyphicon-log-out"&amp;gt;&amp;lt;/span&amp;gt; Salir&lt;br&gt;
					&amp;lt;/a&amp;gt;&lt;br&gt;
				&amp;lt;/div&amp;gt;&lt;br&gt;
				{% block menu %}&lt;br&gt;
		        {% endblock menu %}&lt;br&gt;
		    &amp;lt;/nav&amp;gt;&lt;br&gt;
			&amp;lt;div id="page-wrapper"&amp;gt;&lt;br&gt;
				&amp;lt;div class="container-fluid"&amp;gt;&lt;br&gt;
					{% block cuerpo %}&lt;br&gt;
					{% endblock cuerpo %}&lt;br&gt;
				&amp;lt;/div&amp;gt;&lt;br&gt;
			&amp;lt;/div&amp;gt;&lt;br&gt;
		&amp;lt;/div&amp;gt;&lt;br&gt;
	&amp;lt;/body&amp;gt;&lt;br&gt;
	{% block js %}&lt;br&gt;
	{% endblock js %}&lt;br&gt;
&amp;lt;/html&amp;gt;&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Con lo que tenemos lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/salir.jpg"&gt;&lt;img class="size-medium wp-image-204 aligncenter" src="https://pythonpiura.files.wordpress.com/2016/04/salir.jpg?w=300" alt="salir" width="300" height="77"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Ahora ya podemos dar click en salir y terminar la sesión que estamos utilizando, pero si observamos bien esto nos nos sirve de nada para proteger nuestra aplicación de accesos no deseados, es decir que un usuario sin estar logueado puede ingresar facilmente a cualquiera de nuestras urls, con solo ponerla en el navegador, por ejemplo, pongamos en la barra de direcciones:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://localhost:8000/personas/"&gt;http://localhost:8000/personas/&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Y observemos que podemos entrar sin ningún problema a pesar de no estar logueados.&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;¿Cómo arreglamos esto? Sencillo, viene a nuestra ayuda un &lt;a href="http://www.juanjoconti.com.ar/2008/07/11/decoradores-en-python-i/"&gt;decorador&lt;/a&gt; muy útil llamado login_required, este va a proteger nuestra vista de aquellos usuarios que pretenden ingresar sin tener una sesión iniciada, para utilizarlo simplemente debemos modificar nuestro archivo urls.py de la aplicación con las vistas que queremos proteger:&lt;/p&gt;
&lt;p&gt;[sourcecode language="python"]&lt;br&gt;
from django.conf.urls import patterns, url&lt;br&gt;
from personas.views import Personas, CrearPersona, ReportePersonasExcel,\&lt;br&gt;
    Bienvenida, DetallePersona, ModificarPersona&lt;br&gt;
from django.contrib.auth.decorators import login_required&lt;/p&gt;
&lt;p&gt;urlpatterns = patterns(”,&lt;br&gt;
    url(r’^$’,login_required(Bienvenida.as_view()), name="bienvenida"),&lt;br&gt;
    url(r’^personas/$’,login_required(Personas.as_view()), name="personas"),&lt;br&gt;
    url(r’^crear_persona/$’,login_required(CrearPersona.as_view()), name="crear_persona"),&lt;br&gt;
    url(r’^reporte_personas_excel/$’,login_required(ReportePersonasExcel.as_view()), name="reporte_personas_excel"),&lt;br&gt;
    url(r’^detalle_persona/(?P&amp;lt;pk&amp;gt;\d+)/$’, login_required(DetallePersona.as_view()), name="detalle_persona"),&lt;br&gt;
    url(r’^modificar_persona/(?P&amp;lt;pk&amp;gt;\d+)/$’,login_required(ModificarPersona.as_view()), name="modificar_persona"),&lt;br&gt;
)&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Si probamos ahora poniendo nuevamente la dirección anterior en nuestra barra de direcciones sin habernos logueado, nos aparecerá la siguiente pantalla:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/error.jpg"&gt;&lt;img class="size-medium wp-image-205 aligncenter" src="https://pythonpiura.files.wordpress.com/2016/04/error.jpg?w=300" alt="error" width="300" height="75"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;¿Muy feo, no? Lamentablemente no podemos presentar esto al usuario sino que quisieramos que cada vez que alguien intente acceder de esta forma, nos redireccione a la pantalla de login, esto lo hacemos con una linea agregada al archivo settings.py:&lt;/p&gt;
&lt;p&gt;[sourcecode language="python"]&lt;br&gt;
LOGIN_URL = ‘/’&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Ahora probemos nuevamente:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/correcto.jpg"&gt;&lt;img class="aligncenter size-medium wp-image-206" src="https://pythonpiura.files.wordpress.com/2016/04/correcto.jpg?w=300" alt="correcto" width="300" height="77"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Con esto ya tenemos protegidas nuestras vistas y garantizamos que no tendremos accesos no deseados.&lt;br&gt;
Saludos.&lt;/p&gt;
</description><category>Django</category><guid>http://pythonpiura.org/posts/2016/04/27/logout-y-proteccion-de-vistas-en-django/</guid><pubDate>Thu, 28 Apr 2016 03:21:09 GMT</pubDate></item><item><title>Login en Django</title><link>http://pythonpiura.org/posts/2016/04/26/login-en-django/</link><dc:creator>Comunidad Python Piura</dc:creator><description>&lt;p style="text-align:justify;"&gt;Hasta este momento hemos podido tener acceso sin ningún tipo de restricciones a nuestro proyecto tutorial, pero todos sabemos que en el mundo real, eso no funciona así, por lo tanto es necesario que creemos un login para que los usuarios puedan iniciar sesión, para ello vamos a rediseñar nuestro proyecto tutorial y vamos a agregar nuevas cosas, para hacer este pequeño post me he basado en estos artículos:&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;&lt;a href="http://www.secnot.com/django-custom-login-cbv.html"&gt;Formulario Login usando Class Based Views &lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;&lt;a href="http://librosweb.es/libro/django_1_0/capitulo_12/utilizando_usuarios.html"&gt;El Libro de Django&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;
Listo ahora si empecemos con todo:&lt;br&gt;
Primero crearemos una aplicación llamada seguridad, donde vamos a manejar todo lo referente a los usuarios:&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;&lt;a href="http://pythonpiura.org/2016/04/seguridad.jpg"&gt;&lt;img class="alignnone size-full wp-image-195" src="http://pythonpiura.org/2016/04/seguridad.jpg" alt="seguridad" width="160" height="205"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ahora vamos a decirle a nuestro settings.py que vamos a utilizar la aplicación seguridad:&lt;/p&gt;
&lt;p&gt;[sourcecode language="python"]&lt;br&gt;
INSTALLED_APPS = (&lt;br&gt;
    ‘django.contrib.admin’,&lt;br&gt;
    ‘django.contrib.auth’,&lt;br&gt;
    ‘django.contrib.contenttypes’,&lt;br&gt;
    ‘django.contrib.sessions’,&lt;br&gt;
    ‘django.contrib.messages’,&lt;br&gt;
    ‘django.contrib.staticfiles’,&lt;br&gt;
    ‘seguridad’,&lt;br&gt;
    ‘personas’,&lt;br&gt;
)&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Y redefinimos nuestro archivo urls.py principal de tal manera que al ingresar ya no apunte a la aplicación personas sino a seguridad:&lt;/p&gt;
&lt;p&gt;[sourcecode language="python"]&lt;br&gt;
from django.conf.urls import include, url&lt;br&gt;
from django.contrib import admin&lt;/p&gt;
&lt;p&gt;urlpatterns = [&lt;br&gt;
    url(r'^admin/', include(admin.site.urls)),&lt;br&gt;
    url(r'^', include('seguridad.urls',namespace='seguridad')),&lt;br&gt;
    url(r'^personas/', include('personas.urls',namespace='personas')),&lt;br&gt;
]&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Dentro de nuestra aplicación seguridad vamos a crear una vista llamada Login:&lt;/p&gt;
&lt;p&gt;[sourcecode language="python"]&lt;br&gt;
#Importamos la vista genérica FormView&lt;br&gt;
from django.views.generic.edit import FormView&lt;br&gt;
from django.http.response import HttpResponseRedirect&lt;br&gt;
from django.core.urlresolvers import reverse_lazy&lt;br&gt;
#Importamos el formulario de autenticación de django&lt;br&gt;
from django.contrib.auth.forms import AuthenticationForm&lt;br&gt;
from django.contrib.auth import login&lt;/p&gt;
&lt;p&gt;# Create your views here.&lt;br&gt;
class Login(FormView):&lt;br&gt;
    #Establecemos la plantilla a utilizar&lt;br&gt;
    template_name = ‘login.html’&lt;br&gt;
    #Le indicamos que el formulario a utilizar es el formulario de autenticación de Django&lt;br&gt;
    form_class = AuthenticationForm&lt;br&gt;
    #Le decimos que cuando se haya completado exitosamente la operación nos redireccione a la url bienvenida de la aplicación personas&lt;br&gt;
    success_url =  reverse_lazy("personas:bienvenida")&lt;/p&gt;
&lt;p&gt;    def dispatch(self, request, *args, **kwargs):&lt;br&gt;
        #Si el usuario está autenticado entonces nos direcciona a la url establecida en success_url&lt;br&gt;
        if request.user.is_authenticated():&lt;br&gt;
            return HttpResponseRedirect(self.get_success_url())&lt;br&gt;
        #Sino lo está entonces nos muestra la plantilla del login simplemente&lt;br&gt;
        else:&lt;br&gt;
            return super(Login, self).dispatch(request, *args, **kwargs)&lt;/p&gt;
&lt;p&gt;    def form_valid(self, form):&lt;br&gt;
        login(self.request, form.get_user())&lt;br&gt;
        return super(Login, self).form_valid(form)&lt;/p&gt;
&lt;p&gt;[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Expliquemos algunas cosas:&lt;br&gt;
reverse_lazy, como su nombre lo indica, es una implementación perezosa de la URL de resolución inversa(reverse). A diferencia de la función inversa tradicional, reverse_lazy no se ejecutará hasta que se necesite el valor. Es útil para prevenir excepciones ‘Reverse Not Found’ cuando se trabaja con direcciones URL que no pueden ser conocidos inmediatamente.&lt;br&gt;
dispatch, en el archivo urls.py el punto de entrada as_view() crea una instancia de la clase y llama al método dispatch(), (el despachador o resolvedor de URL) que busca la petición para determinar si es un GET, POST, etc, y releva la petición a un método que coincida con uno definido, o levante una excepción HttpResponseNotAllowed si no encuentra coincidencias.&lt;br&gt;
form_valid, este método es llamado cuando el formulario valida los datos.&lt;br&gt;
login, la llamada a login() acepta un objeto de la clase HttpRequest y un objeto User y almacena el identificador del usuario en la sesión, usando el entorno de sesiones de Django. En el caso nuestro, al usar el formulario de autenticación de django, invocando a form.get_user() obtenemos el objeto User.&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Ahora vamos a crear la plantilla login.html y la guardaremos dentro de la carpeta templates(que debemos crear) en nuestra aplicación seguridad:&lt;/p&gt;
&lt;p&gt;[sourcecode language="html"]&lt;br&gt;
{% load staticfiles %}&lt;br&gt;
&amp;lt;!DOCTYPE html&amp;gt;&lt;br&gt;
&amp;lt;html&amp;gt;&lt;br&gt;
	&amp;lt;head&amp;gt;&lt;br&gt;
	    &amp;lt;meta charset="utf-8"/&amp;gt;&amp;lt;/meta&amp;gt;&lt;br&gt;
	    &amp;lt;title&amp;gt;CIPROPY&amp;lt;/title&amp;gt;&lt;br&gt;
	    &amp;lt;meta content="width=device-width, initial-scale=1.0" name="viewport"&amp;gt;&amp;lt;/meta&amp;gt;&lt;br&gt;
	    &amp;lt;link rel="stylesheet" type="text/css" href="{% static "css/bootstrap.min.css" %}"&amp;gt;&amp;lt;/link&amp;gt;&lt;br&gt;
	&amp;lt;/head&amp;gt;&lt;br&gt;
	&amp;lt;body&amp;gt;&lt;br&gt;
		&amp;lt;div class="container"&amp;gt;&lt;br&gt;
			&amp;lt;br&amp;gt;&lt;br&gt;
			&amp;lt;div class="row"&amp;gt;&lt;br&gt;
				&amp;lt;div class="col-md-4 col-md-offset-4"&amp;gt;&lt;br&gt;
					&amp;lt;div class="login-panel panel panel-default"&amp;gt;&lt;br&gt;
					    &amp;lt;div class="panel-heading"&amp;gt;&lt;br&gt;
					        &amp;lt;h3 class="panel-title"&amp;gt;CIPROPY&amp;lt;/h3&amp;gt;&lt;br&gt;
					    &amp;lt;/div&amp;gt;&lt;br&gt;
					    &amp;lt;div class="panel-body"&amp;gt;&lt;br&gt;
							&amp;lt;form role="form" method="post" id=’form_login’&amp;gt;&lt;br&gt;
								{% csrf_token %}&lt;br&gt;
							    &amp;lt;div class="form-group"&amp;gt;&lt;br&gt;
							    	&amp;lt;label&amp;gt;Usuario:&amp;lt;/label&amp;gt;&lt;br&gt;
							        {{ form.username }}&lt;br&gt;
							    &amp;lt;/div&amp;gt;&lt;br&gt;
							    &amp;lt;div class="form-group"&amp;gt;&lt;br&gt;
							    	&amp;lt;label&amp;gt;Contraseña:&amp;lt;/label&amp;gt;&lt;br&gt;
							        {{ form.password }}&lt;br&gt;
							    &amp;lt;/div&amp;gt;&lt;br&gt;
							    &amp;lt;button class="btn btn-lg btn-success btn-block" type="submit" name="login"/&amp;gt;Login&amp;lt;/button&amp;gt;&lt;br&gt;
						    &amp;lt;/form&amp;gt;&lt;br&gt;
						&amp;lt;/div&amp;gt;&lt;br&gt;
			        &amp;lt;/div&amp;gt;&lt;br&gt;
			    &amp;lt;/div&amp;gt;&lt;br&gt;
			&amp;lt;/div&amp;gt;&lt;br&gt;
		&amp;lt;/div&amp;gt;&lt;br&gt;
	&amp;lt;/body&amp;gt;&lt;br&gt;
&amp;lt;/html&amp;gt;&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Nótese que esta plantilla no extiende de ninguna otra, ya que su comportamiento es especial, otra cosa peculiar aquí es el uso de las etiquetas {{ form.username }} y {{ form.password }} que al renderizarse se comportan como dos cajas de texto una normal y la otra tipo password, esto es posible gracias a que estamos usando el Formulario AuthenticationForm de Django y lo hemos definido previamente en nuestra vista Login, este formulario tiene los campos username y password y los podemos utilizar en la plantilla anteponiendo el objeto form, este comportamiento especial es definido por la clase FormView.&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Ahora si debemos crear un archivo urls.py en nuestra aplicación seguridad de la siguiente manera:&lt;/p&gt;
&lt;p&gt;[sourcecode language="python"]&lt;br&gt;
from django.conf.urls import patterns, url&lt;br&gt;
from seguridad.views import Login&lt;/p&gt;
&lt;p&gt;urlpatterns = patterns(”,&lt;br&gt;
    url(r’^$’, Login.as_view(), name="login"),&lt;br&gt;
)&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Y listo con eso ya tenemos que al momento de correr nuestro servidor de prueba nos va a mostrar lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/login.jpg"&gt;&lt;img class="wp-image-197 aligncenter" src="https://pythonpiura.files.wordpress.com/2016/04/login1.jpg?w=300" alt="login" width="491" height="139"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Con esto ya tenemos el proyecto listo pero no tenemos ningún usuario, debemos crear el superusuario para probar, mas adelante en próximos tutoriales crearemos mas usuarios para hacer las pruebas correspondientes, nos movemos hasta la carpeta donde está ubicado el proyecto y desde una terminal escribimos lo siguiente:&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
python manage.py createsuperuser&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Nos pedira algunos datos, que debemos completar o presionar enter para dejar el dato mostrado por defecto entre paréntesis:&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
Username (leave blank to use ‘mamaya’):&lt;br&gt;
Email address:&lt;br&gt;
Password:&lt;br&gt;
Password (again):&lt;br&gt;
Superuser created successfully.&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;En mi caso he dejado por defecto el usuario mamaya, no le he puesto ninguna dirección de correo y he completado la password, esta no aparece al momento de ser digitada ya que es un mecanismo de protección de django, si todo se ha hecho correctamente nos aparecerá el mensaje “Superuser created successfully.”&lt;/p&gt;
&lt;p&gt;Ahora si ya podemos usar el usuario mamaya para loguearnos&lt;br&gt;
&lt;a href="http://pythonpiura.org/2016/04/login.jpg"&gt;&lt;img class="wp-image-197 aligncenter" src="https://pythonpiura.files.wordpress.com/2016/04/login.jpg?w=300" alt="login" width="622" height="172"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Si hemos escrito correctamente la password nos redireccionará hasta nuestra vista principal de la aplicación personas y sino nos volverá a mostrar la ventana de login:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/presonas.jpg"&gt;&lt;img class="wp-image-199 aligncenter" src="https://pythonpiura.files.wordpress.com/2016/04/presonas.jpg?w=300" alt="presonas" width="675" height="198"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Listo eso es todo, ya estaremos mejorando el funcionamiento de nuestro login en próximos posts.&lt;/p&gt;
&lt;p&gt;Saludos.&lt;/p&gt;
</description><category>Django</category><guid>http://pythonpiura.org/posts/2016/04/26/login-en-django/</guid><pubDate>Wed, 27 Apr 2016 03:08:42 GMT</pubDate></item><item><title>Uso de UpdateView</title><link>http://pythonpiura.org/posts/2016/04/21/uso-de-updateview/</link><dc:creator>Comunidad Python Piura</dc:creator><description>&lt;p style="text-align:justify;"&gt;En este post vamos a terminar lo que dejamos inconcluso anteriormente, el uso de la clase UpdateView, como ya tenemos listo nuestro archivo personas.html, simplemente vamos a crear la clase y la url necesarias.&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;views.py&lt;/p&gt;
&lt;p&gt;[sourcecode language="python"]&lt;br&gt;
class ModificarPersona(UpdateView):&lt;br&gt;
    #Especificamos que el modelo a utilizar va a ser Persona&lt;br&gt;
    model = Persona&lt;br&gt;
    #Establecemos que la plantilla se llamará modificar persona&lt;br&gt;
    template_name = ‘modificar_persona.html’&lt;br&gt;
    #Determinamos los campos con los que se va a trabajar, esto es obligatorio sino nos saldrá un error&lt;br&gt;
    fields = ['dni','nombre','apellido_paterno','apellido_materno']&lt;br&gt;
    #Con esta linea establecemos que se hará despues que la operación de modificación se complete correctamente&lt;br&gt;
    success_url = reverse_lazy(‘personas:personas’)&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Ahora creamos nuestra plantilla modificar_persona.html:&lt;/p&gt;
&lt;p&gt;[sourcecode language="html"]&lt;br&gt;
{% extends "base.html" %}&lt;br&gt;
{% block cuerpo %}&lt;/p&gt;
&lt;p&gt;&amp;lt;div class="row"&amp;gt;&lt;br&gt;
    &amp;lt;div class="col-lg-12"&amp;gt;&lt;br&gt;
        &amp;lt;h1 class="page-header"&amp;gt;Modificar Persona&amp;lt;/h1&amp;gt;&lt;br&gt;
    &amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;div class="row"&amp;gt;&lt;br&gt;
	&amp;lt;div class="col-lg-12"&amp;gt;&lt;br&gt;
		&amp;lt;div class="panel panel-default"&amp;gt;&lt;br&gt;
			&amp;lt;div class="panel-heading"&amp;gt;&lt;br&gt;
			    Por favor ingrese todos los campos necesarios.&lt;br&gt;
			&amp;lt;/div&amp;gt;&lt;br&gt;
			&amp;lt;div class="panel-body"&amp;gt;&lt;br&gt;
				&amp;lt;form role="form" method="post"&amp;gt;&lt;br&gt;
					{% csrf_token %}&lt;br&gt;
					&amp;lt;div class="form-group"&amp;gt;&lt;br&gt;
						{{ form.as_p }}&lt;br&gt;
					&amp;lt;/div&amp;gt;&lt;br&gt;
					&amp;lt;div class=’form-group’&amp;gt;&lt;br&gt;
						&amp;lt;input type="submit" class="btn btn-primary" name="submit" value="Modificar Persona"&amp;gt;&lt;br&gt;
						&amp;lt;button type="reset" class="btn btn-primary" onclick="location.href=’{% url ‘personas:personas’ %}’"&amp;gt;&lt;br&gt;
						    Cancelar&lt;br&gt;
						&amp;lt;/button&amp;gt;&lt;br&gt;
					&amp;lt;/div&amp;gt;&lt;br&gt;
				&amp;lt;/form&amp;gt;&lt;br&gt;
			&amp;lt;/div&amp;gt;&lt;br&gt;
		&amp;lt;/div&amp;gt;&lt;br&gt;
	&amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;div id="popup"&amp;gt;&amp;lt;/div&amp;gt;&lt;br&gt;
{% endblock cuerpo %}&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Ahora le toca el turno a urls.py:&lt;/p&gt;
&lt;p&gt;[sourcecode language="python"]&lt;br&gt;
from django.conf.urls import patterns, url&lt;br&gt;
from personas.views import Personas, CrearPersona, ReportePersonasExcel,\&lt;br&gt;
    Bienvenida, DetallePersona, ModificarPersona&lt;/p&gt;
&lt;p&gt;urlpatterns = patterns(”,&lt;br&gt;
    url(r’^$’,Bienvenida.as_view(), name="bienvenida"),&lt;br&gt;
    url(r’^personas/$’,Personas.as_view(), name="personas"),&lt;br&gt;
    url(r’^crear_persona/$’,CrearPersona.as_view(), name="crear_persona"),&lt;br&gt;
    url(r’^reporte_personas_excel/$’,ReportePersonasExcel.as_view(), name="reporte_personas_excel"),&lt;br&gt;
    url(r’^detalle_persona/(?P&amp;lt;pk&amp;gt;\d+)/$’, DetallePersona.as_view(), name="detalle_persona"),&lt;br&gt;
    url(r’^modificar_persona/(?P&amp;lt;pk&amp;gt;\d+)/$’,ModificarPersona.as_view(), name="modificar_persona"),&lt;br&gt;
)&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Nótese que la última url añadida es la de modificar persona, y funciona de manera parecida al detalle.&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Ahora si hacemos que el enlace con el ícono del lapiz apunte a la url de modificar_persona:&lt;/p&gt;
&lt;p&gt;personas.html&lt;br&gt;
[sourcecode language="html"]&lt;br&gt;
&amp;lt;a class="btn btn-small" href="{% url ‘personas:modificar_persona’ persona.pk %}"&amp;gt;&lt;br&gt;
	&amp;lt;span class="glyphicon glyphicon-pencil"&amp;gt;&amp;lt;/span&amp;gt;&lt;br&gt;
&amp;lt;/a&amp;gt;&lt;br&gt;
[/sourcecode]&lt;br&gt;
Con lo que tenemos lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/modificar_persona.jpg"&gt;&lt;img class="alignnone size-medium wp-image-183" src="https://pythonpiura.files.wordpress.com/2016/04/modificar_persona.jpg?w=300" alt="modificar_persona" width="500" height="250"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Saludos es todo por hoy.&lt;/p&gt;
</description><category>Django</category><guid>http://pythonpiura.org/posts/2016/04/21/uso-de-updateview/</guid><pubDate>Fri, 22 Apr 2016 03:26:16 GMT</pubDate></item><item><title>Uso de DetailView</title><link>http://pythonpiura.org/posts/2016/04/21/uso-de-detailview/</link><dc:creator>Comunidad Python Piura</dc:creator><description>&lt;p style="text-align:justify;"&gt;Luego de haber visto el uso de TemplateView, CreateView y ListView, estos dos últimos los vimos de pasada casi sin mencionarlos, ahora vamos a agregar un par de nuevas funcionalidades a nuestro proyecto tutorial, para ello empezaremos modificando el archivo personas.html para agregarle un par de enlaces que nos van a permitir editar y ver el detalle de una persona en cuestión, en este post solamente cubriremos la funcionalidad de ver el detalle, posteriormente en otro post nos encargaremos de la funcionalidad de editar a la persona:&lt;/p&gt;
&lt;p&gt;[sourcecode language="html"]&lt;br&gt;
{% extends "base.html" %}&lt;br&gt;
{% block cuerpo %}&lt;br&gt;
&amp;lt;div class="row"&amp;gt;&lt;br&gt;
    &amp;lt;div class="col-lg-12"&amp;gt;&lt;br&gt;
        &amp;lt;h1 class="page-header"&amp;gt;Tablas&amp;lt;/h1&amp;gt;&lt;br&gt;
    &amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;div class="row"&amp;gt;&lt;br&gt;
	&amp;lt;div class="col-lg-12"&amp;gt;&lt;br&gt;
		&amp;lt;div class="panel panel-info"&amp;gt;&lt;br&gt;
			&amp;lt;div class="panel-heading"&amp;gt;&lt;br&gt;
			    Personas&lt;br&gt;
			&amp;lt;/div&amp;gt;&lt;br&gt;
			&amp;lt;div class="panel-body"&amp;gt;&lt;br&gt;
				&amp;lt;div class=’form-group’&amp;gt;&lt;br&gt;
					&amp;lt;div class="row"&amp;gt;&lt;br&gt;
						&amp;lt;div class="col-lg-10"&amp;gt;	&lt;/p&gt;
&lt;p&gt;						&amp;lt;/div&amp;gt;&lt;br&gt;
						&amp;lt;div class="col-lg-1"&amp;gt;&lt;br&gt;
							&amp;lt;a id="crear_detalle" href="{% url ‘personas:reporte_personas_excel’ %}" class="btn btn-info btn-block"&amp;gt;&lt;br&gt;
								&amp;lt;span class="glyphicon glyphicon-list-alt"&amp;gt;&amp;lt;/span&amp;gt;&lt;br&gt;
							&amp;lt;/a&amp;gt;&lt;br&gt;
						&amp;lt;/div&amp;gt;&lt;br&gt;
						&amp;lt;div class="col-lg-1"&amp;gt;&lt;br&gt;
							&amp;lt;a id="crear_detalle" href="{% url ‘personas:crear_persona’ %}" class="btn btn-info btn-block"&amp;gt;&lt;br&gt;
								&amp;lt;span class="glyphicon glyphicon-plus"&amp;gt;&amp;lt;/span&amp;gt;&lt;br&gt;
							&amp;lt;/a&amp;gt;&lt;br&gt;
						&amp;lt;/div&amp;gt;&lt;br&gt;
					&amp;lt;/div&amp;gt;&lt;br&gt;
				&amp;lt;/div&amp;gt;&lt;br&gt;
				&amp;lt;div class="row"&amp;gt;&lt;br&gt;
					&amp;lt;div class="col-lg-12"&amp;gt;&lt;br&gt;
						&amp;lt;table id="tabla" class="table table-striped table-bordered" cellspacing="0" width="100%"&amp;gt;&lt;br&gt;
							&amp;lt;thead&amp;gt;&lt;br&gt;
								&amp;lt;tr&amp;gt;&lt;br&gt;
									&amp;lt;th class="text-center"&amp;gt;DNI&amp;lt;/th&amp;gt;&lt;br&gt;
									&amp;lt;th class="text-center"&amp;gt;NOMBRE&amp;lt;/th&amp;gt;&lt;br&gt;
									&amp;lt;th class="text-center"&amp;gt;APELLIDO PATERNO&amp;lt;/th&amp;gt;&lt;br&gt;
									&amp;lt;th class="text-center"&amp;gt;APELLIDO MATERNO&amp;lt;/th&amp;gt;&lt;br&gt;
									&amp;lt;th class="text-center"&amp;gt;ACCIONES&amp;lt;/th&amp;gt;&lt;br&gt;
								&amp;lt;/tr&amp;gt;&lt;br&gt;
							&amp;lt;/thead&amp;gt;&lt;br&gt;
							&amp;lt;tbody&amp;gt;&lt;br&gt;
							{% for persona in personas %}&lt;br&gt;
								&amp;lt;tr&amp;gt;&lt;br&gt;
									&amp;lt;td&amp;gt;{{ persona.dni }}&amp;lt;/td&amp;gt;&lt;br&gt;
									&amp;lt;td&amp;gt;{{ persona.nombre }}&amp;lt;/td&amp;gt;&lt;br&gt;
									&amp;lt;td&amp;gt;{{ persona.apellido_paterno }}&amp;lt;/td&amp;gt;&lt;br&gt;
									&amp;lt;td&amp;gt;{{ persona.apellido_materno }}&amp;lt;/td&amp;gt;&lt;br&gt;
									&amp;lt;td class="text-center"&amp;gt;&lt;br&gt;
										&amp;lt;a class="btn btn-small" href="#"&amp;gt;&lt;br&gt;
							                &amp;lt;span class="glyphicon glyphicon-folder-open"&amp;gt;&amp;lt;/span&amp;gt;&lt;br&gt;
							            &amp;lt;/a&amp;gt;&lt;br&gt;
							            &amp;lt;a class="btn btn-small" href="#"&amp;gt;&lt;br&gt;
							                &amp;lt;span class="glyphicon glyphicon-pencil"&amp;gt;&amp;lt;/span&amp;gt;&lt;br&gt;
							            &amp;lt;/a&amp;gt;&lt;br&gt;
							        &amp;lt;/td&amp;gt;&lt;br&gt;
								&amp;lt;/tr&amp;gt;&lt;br&gt;
							{% endfor %}&lt;br&gt;
							&amp;lt;/tbody&amp;gt;&lt;br&gt;
						&amp;lt;/table&amp;gt;&lt;br&gt;
					&amp;lt;/div&amp;gt;&lt;br&gt;
				&amp;lt;/div&amp;gt;&lt;br&gt;
			&amp;lt;/div&amp;gt;&lt;br&gt;
		&amp;lt;/div&amp;gt;&lt;br&gt;
	&amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;/div&amp;gt;&lt;br&gt;
{% endblock cuerpo %}&lt;br&gt;
{% block js %}&lt;br&gt;
&amp;lt;script&amp;gt;&lt;br&gt;
$(document).ready(function()&lt;br&gt;
{&lt;br&gt;
    var table = $(‘#tabla’).DataTable( {&lt;br&gt;
        "language": {&lt;br&gt;
        	url: "/static/localizacion/es_ES.json"&lt;br&gt;
        }&lt;br&gt;
    } );&lt;/p&gt;
&lt;p&gt;    $(‘#tabla tbody’).on( ‘click’, ‘tr’, function()&lt;br&gt;
    {&lt;br&gt;
    	if ($(this).hasClass(‘selected’) )&lt;br&gt;
        {&lt;br&gt;
        	$(this).removeClass(‘selected’);&lt;/p&gt;
&lt;p&gt;        }&lt;br&gt;
        else&lt;br&gt;
        {&lt;br&gt;
	        table.$(‘tr.selected’).removeClass(‘selected’);&lt;br&gt;
	        $(this).addClass(‘selected’);&lt;br&gt;
        }&lt;br&gt;
    });   &lt;/p&gt;
&lt;p&gt;});&lt;br&gt;
&amp;lt;/script&amp;gt;&lt;br&gt;
{% endblock js %}&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Nótese que en la cabecera de la tabla hemos puesto el encabezado acciones y que dentro del cuerpo de la tabla se ha agregado una columna que contiene dos enlaces: uno con el ícono de un libro y otro con el ícono de un lapiz, ambos son, para ver el detalle de la persona y el otro para editarlo.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/tabla_nueva.jpg"&gt;&lt;img class="aligncenter wp-image-174" src="https://pythonpiura.files.wordpress.com/2016/04/tabla_nueva.jpg?w=300" alt="tabla_nueva" width="568" height="191"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Ahora vamos a implementar la funcionalidad de ver el detalle de la persona, para ello usamos la clase DetailView, esta clase nos simplifica la vida ya que nos permite mostrar el detalle de un modelo en particular, debiendo definir el modelo al que haremos referencia y la plantilla donde se renderizará el contenido:&lt;/p&gt;
&lt;p&gt;[sourcecode language="python"]&lt;br&gt;
from django.views.generic.detail import DetailView&lt;br&gt;
class DetallePersona(DetailView):&lt;br&gt;
    model = Persona&lt;br&gt;
    template_name = ‘detalle_persona.html’&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Ahora debemos crear la plantilla detalle_persona.html:&lt;/p&gt;
&lt;p&gt;[sourcecode language="html"]&lt;br&gt;
{% extends "base.html" %}&lt;br&gt;
{% block cuerpo %}&lt;br&gt;
&amp;lt;div class="row"&amp;gt;&lt;br&gt;
    &amp;lt;div class="col-lg-12"&amp;gt;&lt;br&gt;
        &amp;lt;h1 class="page-header"&amp;gt;Personas&amp;lt;/h1&amp;gt;&lt;br&gt;
    &amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;div class="row"&amp;gt;&lt;br&gt;
	&amp;lt;div class="col-lg-12"&amp;gt;&lt;br&gt;
		&amp;lt;div class="panel panel-info"&amp;gt;&lt;br&gt;
			&amp;lt;div class="panel-heading"&amp;gt;&lt;br&gt;
			    Detalle de Persona&lt;br&gt;
			&amp;lt;/div&amp;gt;&lt;br&gt;
			&amp;lt;div class="panel-body"&amp;gt;&lt;br&gt;
				&amp;lt;div class=’form-group’&amp;gt;&lt;br&gt;
					&amp;lt;div class="row"&amp;gt;&lt;br&gt;
						&amp;lt;div class="col-md-12"&amp;gt;&lt;br&gt;
							&amp;lt;label&amp;gt;DNI:&amp;lt;/label&amp;gt;&lt;br&gt;
							&amp;lt;p&amp;gt;{{ object.dni }}&amp;lt;/p&amp;gt;&lt;br&gt;
							&amp;lt;label&amp;gt;NOMBRE:&amp;lt;/label&amp;gt;&lt;br&gt;
							&amp;lt;p&amp;gt;{{ object.nombre }}&amp;lt;/p&amp;gt;&lt;br&gt;
							&amp;lt;label&amp;gt;APELLIDO PATERNO:&amp;lt;/label&amp;gt;&lt;br&gt;
							&amp;lt;p&amp;gt;{{ object.apellido_paterno }}&amp;lt;/p&amp;gt;&lt;br&gt;
							&amp;lt;label&amp;gt;APELLIDO MATERNO: &amp;lt;/label&amp;gt;&lt;br&gt;
							&amp;lt;p&amp;gt;{{ object.apellido_materno }}&amp;lt;/p&amp;gt;&lt;br&gt;
						&amp;lt;/div&amp;gt;&lt;br&gt;
					&amp;lt;/div&amp;gt;&lt;br&gt;
				&amp;lt;/div&amp;gt;&lt;br&gt;
			&amp;lt;/div&amp;gt;&lt;br&gt;
		&amp;lt;/div&amp;gt;&lt;br&gt;
	&amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;/div&amp;gt;&lt;br&gt;
{% endblock cuerpo %}&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Modificamos el archivo urls.py para crear el url detalle_persona:&lt;/p&gt;
&lt;p&gt;[sourcecode language="python"]&lt;br&gt;
from django.conf.urls import patterns, url&lt;br&gt;
from personas.views import Personas, CrearPersona, ReportePersonasExcel,\&lt;br&gt;
    Bienvenida, DetallePersona&lt;/p&gt;
&lt;p&gt;urlpatterns = patterns(”,&lt;br&gt;
    url(r’^$’,Bienvenida.as_view(), name="bienvenida"),&lt;br&gt;
    url(r’^personas/$’,Personas.as_view(), name="personas"),&lt;br&gt;
    url(r’^crear_persona/$’,CrearPersona.as_view(), name="crear_persona"),&lt;br&gt;
    url(r’^reporte_personas_excel/$’,ReportePersonasExcel.as_view(), name="reporte_personas_excel"),&lt;br&gt;
    url(r’^detalle_persona/(?P&amp;lt;pk&amp;gt;\d+)/$’, DetallePersona.as_view(), name="detalle_persona"),&lt;br&gt;
)&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Ahora hacemos que el enlace con el ícono del libro abierto apunte a nuestra url detalle_persona, debemos tener en cuenta que el enlace debe estar de acuerdo a la definición de la expresión regular en la url, en este caso se le pasa como argumento la primary key que debe ser un conjunto de dígitos:&lt;/p&gt;
&lt;p&gt;[sourcecode language="html"]&lt;br&gt;
&amp;lt;a class="btn btn-small" href="{% url ‘personas:detalle_persona’ persona.pk %}"&amp;gt;&lt;br&gt;
	&amp;lt;span class="glyphicon glyphicon-folder-open"&amp;gt;&amp;lt;/span&amp;gt;&lt;br&gt;
&amp;lt;/a&amp;gt;&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Ahora cuando hagamos click en el ícono del lápiz nos mostrará lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/detalle_persona.jpg"&gt;&lt;img class="alignnone size-medium wp-image-175" src="https://pythonpiura.files.wordpress.com/2016/04/detalle_persona.jpg?w=300" alt="detalle_persona" width="400" height="125"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Eso es todo.&lt;/p&gt;
&lt;p&gt;Saludos.&lt;/p&gt;
</description><category>Django</category><guid>http://pythonpiura.org/posts/2016/04/21/uso-de-detailview/</guid><pubDate>Fri, 22 Apr 2016 01:48:56 GMT</pubDate></item><item><title>Uso de TemplateView</title><link>http://pythonpiura.org/posts/2016/04/20/templateview/</link><dc:creator>Comunidad Python Piura</dc:creator><description>&lt;p style="text-align:justify;"&gt;Vamos a trabajar con TemplateView para hacer una vista basada en clases, algo que ya hemos utilizado antes y que es bastante fácil de programar, para ello seguiremos con nuestro proyecto tutorial, primero le vamos a hacer unas pequeñas modificaciones para que se adapte a lo que necesitamos.&lt;br&gt;
Editamos el archivo base.html para agregar un pequeño menú en la parte superior de la pantalla:&lt;/p&gt;
&lt;p&gt;[sourcecode language="html"]&lt;br&gt;
{% load staticfiles %}&lt;br&gt;
&amp;lt;!DOCTYPE html&amp;gt;&lt;br&gt;
&amp;lt;html&amp;gt;&lt;br&gt;
	&amp;lt;head&amp;gt;&lt;br&gt;
		&amp;lt;meta charset="utf-8"&amp;gt;&lt;br&gt;
	    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt;&lt;br&gt;
	    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1"&amp;gt;&lt;br&gt;
	    &amp;lt;meta name="description" content=""&amp;gt;&lt;br&gt;
	    &amp;lt;meta name="author" content=""&amp;gt;&lt;br&gt;
		&amp;lt;title&amp;gt;Ejemplo Círculo de Programadores de Python Piura&amp;lt;/title&amp;gt;&lt;br&gt;
		&amp;lt;link rel="stylesheet" type="text/css" href="{% static "css/bootstrap.min.css" %}"&amp;gt;&lt;br&gt;
		&amp;lt;link rel="stylesheet" type="text/css" href="{% static "css/jquery.dataTables.min.css"  %}"  /&amp;gt;&lt;br&gt;
		&amp;lt;script src="{% static "js/jquery.js" %}"&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;
	    &amp;lt;script src="{% static "js/bootstrap.min.js" %}"&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;
	    &amp;lt;script src="{% static "js/jquery.dataTables.min.js" %}"&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;
	&amp;lt;/head&amp;gt;&lt;br&gt;
	&amp;lt;body&amp;gt;&lt;br&gt;
		&amp;lt;div id="wrapper"&amp;gt;&lt;br&gt;
			&amp;lt;nav class="navbar navbar-default navbar-static-top" role="navigation" style="margin-bottom: 0"&amp;gt;&lt;br&gt;
				&amp;lt;div class="navbar-header"&amp;gt;&lt;br&gt;
			        &amp;lt;button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse"&amp;gt;&lt;br&gt;
			            &amp;lt;span class="sr-only"&amp;gt;Desplegar navegación&amp;lt;/span&amp;gt;&lt;br&gt;
			            &amp;lt;span class="icon-bar"&amp;gt;&amp;lt;/span&amp;gt;&lt;br&gt;
			            &amp;lt;span class="icon-bar"&amp;gt;&amp;lt;/span&amp;gt;&lt;br&gt;
			            &amp;lt;span class="icon-bar"&amp;gt;&amp;lt;/span&amp;gt;&lt;br&gt;
			        &amp;lt;/button&amp;gt;&lt;br&gt;
			        &amp;lt;a class="navbar-brand" href="#"&amp;gt;&lt;br&gt;
						&amp;lt;span class="glyphicon glyphicon-home"&amp;gt;&amp;lt;/span&amp;gt; Inicio&lt;br&gt;
					&amp;lt;/a&amp;gt;&lt;br&gt;
					&amp;lt;a class="navbar-brand" href="#"&amp;gt;&lt;br&gt;
						&amp;lt;span class="glyphicon glyphicon-user"&amp;gt;&amp;lt;/span&amp;gt; Personas&lt;br&gt;
					&amp;lt;/a&amp;gt;&lt;br&gt;
			    &amp;lt;/div&amp;gt;&lt;br&gt;
				{% block menu %}&lt;br&gt;
		        {% endblock menu %}&lt;br&gt;
		    &amp;lt;/nav&amp;gt;&lt;br&gt;
			&amp;lt;div id="page-wrapper"&amp;gt;&lt;br&gt;
				&amp;lt;div class="container-fluid"&amp;gt;&lt;br&gt;
					{% block cuerpo %}&lt;br&gt;
					{% endblock cuerpo %}&lt;br&gt;
				&amp;lt;/div&amp;gt;&lt;br&gt;
			&amp;lt;/div&amp;gt;&lt;br&gt;
		&amp;lt;/div&amp;gt;&lt;br&gt;
	&amp;lt;/body&amp;gt;&lt;br&gt;
	{% block js %}&lt;br&gt;
	{% endblock js %}&lt;br&gt;
&amp;lt;/html&amp;gt;&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Tendremos algo como esto:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/menu.jpg"&gt;&lt;img class="wp-image-165 aligncenter" src="https://pythonpiura.files.wordpress.com/2016/04/menu.jpg?w=300" alt="menu" width="600" height="48"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Creamos un archivo llamado bienvenida.html para poner un aviso de bienvenida y de esta manera no ingresar directamente a nuestra tabla de personas, para ello debemos crear una vista usando TemplateView y agregar el url correspondiente:&lt;/p&gt;
&lt;p&gt;bienvenida.html&lt;/p&gt;
&lt;p&gt;[sourcecode language="html"]&lt;br&gt;
{% extends "base.html" %}&lt;br&gt;
{% block cuerpo %}&lt;br&gt;
&amp;lt;div class="row"&amp;gt;&lt;br&gt;
    &amp;lt;div class="col-lg-12"&amp;gt;&lt;br&gt;
        &amp;lt;h1 class="page-header"&amp;gt;Círculo de Programadores de Python Piura&amp;lt;/h1&amp;gt;&lt;br&gt;
    &amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;div class="row"&amp;gt;&lt;br&gt;
	&amp;lt;div class="col-lg-12"&amp;gt;&lt;br&gt;
		&amp;lt;div class="panel panel-info"&amp;gt;&lt;br&gt;
			&amp;lt;div class="panel-heading"&amp;gt;&lt;br&gt;
			    Bienvenido&lt;br&gt;
			&amp;lt;/div&amp;gt;&lt;br&gt;
			&amp;lt;div class="panel-body"&amp;gt;&lt;br&gt;
				&amp;lt;div class=’form-group’&amp;gt;&lt;br&gt;
					&amp;lt;div class="row"&amp;gt;&lt;br&gt;
						&amp;lt;h3 class="text-center"&amp;gt;Bienvenido.&amp;lt;/h3&amp;gt;&lt;br&gt;
					&amp;lt;/div&amp;gt;&lt;br&gt;
				&amp;lt;/div&amp;gt;&lt;br&gt;
			&amp;lt;/div&amp;gt;&lt;br&gt;
	&amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;/div&amp;gt;&lt;br&gt;
{% endblock cuerpo %}&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Creamos una clase llamada Bienvenida, que hereda de TemplateView y le decimos que la plantilla a utilizar se llamará bienvenida.html.&lt;/p&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;p&gt;[sourcecode language="python"]&lt;br&gt;
from django.views.generic.base import TemplateView&lt;/p&gt;
&lt;p&gt;class Bienvenida(TemplateView):&lt;br&gt;
    template_name = "bienvenida.html"&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;En el archivo urls.py cambiamos la url raiz para que apunte a la clase Bienvenida y creamos una url llamada personas para mostrar la tabla personas.&lt;/p&gt;
&lt;p&gt;urls.py&lt;/p&gt;
&lt;p&gt;[sourcecode language="python"]&lt;br&gt;
from django.conf.urls import patterns, url&lt;br&gt;
from personas.views import Personas, CrearPersona, ReportePersonasExcel,\&lt;br&gt;
    Bienvenida&lt;/p&gt;
&lt;p&gt;urlpatterns = patterns(”,&lt;br&gt;
    url(r’^$’,Bienvenida.as_view(), name="bienvenida"),&lt;br&gt;
    url(r’^personas/$’,Personas.as_view(), name="personas"),&lt;br&gt;
    url(r’^crear_persona/$’,CrearPersona.as_view(), name="crear_persona"),&lt;br&gt;
    url(r’^reporte_personas_excel/$’,ReportePersonasExcel.as_view(), name="reporte_personas_excel"),&lt;/p&gt;
&lt;p&gt;)&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Con lo que tendriamos algo como esto:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/nueva.jpg"&gt;&lt;img class="alignnone wp-image-164" src="https://pythonpiura.files.wordpress.com/2016/04/nueva.jpg?w=300" alt="nueva" width="458" height="136"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;¿Y ahora como vemos nuestra tabla personas? Muy fácil haciendo que el enlace llamado “Personas” apunte a la url personas y de paso también hacemos que el enlace “Inicio” apunte a la url de bienvenida, para ello modificamos el archivo base.html:&lt;/p&gt;
&lt;p&gt;[sourcecode language="html"]&lt;br&gt;
&amp;lt;a class="navbar-brand" href="{% url ‘personas:bienvenida’ %}"&amp;gt;&lt;br&gt;
	&amp;lt;span class="glyphicon glyphicon-home"&amp;gt;&amp;lt;/span&amp;gt; Inicio&lt;br&gt;
&amp;lt;/a&amp;gt;&lt;br&gt;
&amp;lt;a class="navbar-brand" href="{% url ‘personas:personas’ %}"&amp;gt;&lt;br&gt;
	&amp;lt;span class="glyphicon glyphicon-user"&amp;gt;&amp;lt;/span&amp;gt; Personas&lt;br&gt;
&amp;lt;/a&amp;gt;&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Con esto hemos podido ver el uso sencillo de TemplateView mas adelante vamos a utilizar otras vistas basadas en clases, hasta la próxima.&lt;br&gt;
Saludos.&lt;/p&gt;
</description><category>Django</category><guid>http://pythonpiura.org/posts/2016/04/20/templateview/</guid><pubDate>Thu, 21 Apr 2016 02:20:23 GMT</pubDate></item><item><title>Generar Reportes en Excel desde Django</title><link>http://pythonpiura.org/posts/2016/04/19/generar-reportes-en-excel-desde-django/</link><dc:creator>Comunidad Python Piura</dc:creator><description>&lt;p style="text-align:justify;"&gt;En ocasiones necesitamos tener nuestros reportes en alguna hoja de cálculo, o peor aún un cliente nos pide un reporte específico en excel ¿Cómo hacemos para generar reportes desde Django en excel?&lt;br&gt;
En nuestra ayuda viene una librería muy interesante que se llama &lt;a href="https://openpyxl.readthedocs.org/en/default/"&gt;openpyxl&lt;/a&gt;, esta libreria nos permite generar contenido en los diferentes formatos de hojas de cálculo de Microsoft Office y soporta desde versiones antiguas hasta la versión Office 2010, para instalarla lo hacemos con nuestro viejo conocido pip:&lt;/p&gt;
&lt;p&gt;[sourcecode language="bash"]&lt;br&gt;
pip install openpyxl&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Ahora vamos a trabajar usando el proyecto &lt;a href="https://pythonpiura.wordpress.com/2016/04/18/datatables-jquery-bootstrap-y-django/"&gt;tutorial &lt;/a&gt;que creamos en el post pasado, aquí agregamos un botón adicional que nos va a permitir exportar el contenido de nuestra tabla de personas a excel, por lo tanto editamos el archivo personas.html y agregamos un botón adicional al que ya teniamos:&lt;/p&gt;
&lt;p&gt;personas.html&lt;/p&gt;
&lt;p&gt;[sourcecode language="html"]&lt;/p&gt;
&lt;p&gt;&amp;lt;div class="col-lg-1"&amp;gt;&lt;br&gt;
	&amp;lt;a id="crear_detalle" href="#" class="btn btn-info btn-block"&amp;gt;&lt;br&gt;
		&amp;lt;span class="glyphicon glyphicon-list-alt"&amp;gt;&amp;lt;/span&amp;gt;&lt;br&gt;
	&amp;lt;/a&amp;gt;&lt;br&gt;
&amp;lt;/div&amp;gt;&lt;/p&gt;
&lt;p&gt;[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Nótese que aún no ponemos el enlace en href para no tener ningún problema, mas adelante modificaremos esto, ahora nuestra aplicación debe verse así:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/tablas2.jpg"&gt;&lt;img class="alignnone wp-image-154" src="https://pythonpiura.files.wordpress.com/2016/04/tablas2.jpg?w=300" alt="tablas2" width="478" height="156"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;En el archivo views.py de la aplicación personas, vamos a crear una clase que nos permita exportar todas las personas que tenemos guardadas, a un archivo en excel.&lt;/p&gt;
&lt;p&gt;views.py&lt;/p&gt;
&lt;p&gt;[sourcecode language="python"]&lt;br&gt;
#Vista genérica para mostrar resultados&lt;br&gt;
from django.views.generic.base import TemplateView&lt;br&gt;
#Workbook nos permite crear libros en excel&lt;br&gt;
from openpyxl import Workbook&lt;br&gt;
#Nos devuelve un objeto resultado, en este caso un archivo de excel&lt;br&gt;
from django.http.response import HttpResponse&lt;/p&gt;
&lt;p&gt;#Nuestra clase hereda de la vista genérica TemplateView&lt;br&gt;
class ReportePersonasExcel(TemplateView):&lt;/p&gt;
&lt;p&gt;    #Usamos el método get para generar el archivo excel&lt;br&gt;
    def get(self, request, *args, **kwargs):&lt;br&gt;
        #Obtenemos todas las personas de nuestra base de datos&lt;br&gt;
        personas = Persona.objects.all()&lt;br&gt;
		#Creamos el libro de trabajo&lt;br&gt;
        wb = Workbook()&lt;br&gt;
		#Definimos como nuestra hoja de trabajo, la hoja activa, por defecto la primera del libro&lt;br&gt;
        ws = wb.active&lt;br&gt;
		#En la celda B1 ponemos el texto ‘REPORTE DE PERSONAS’&lt;br&gt;
        ws['B1'] = ‘REPORTE DE PERSONAS’&lt;br&gt;
		#Juntamos las celdas desde la B1 hasta la E1, formando una sola celda&lt;br&gt;
        ws.merge_cells(‘B1:E1′)&lt;br&gt;
		#Creamos los encabezados desde la celda B3 hasta la E3&lt;br&gt;
        ws['B3'] = ‘DNI’&lt;br&gt;
        ws['C3'] = ‘NOMBRE’&lt;br&gt;
        ws['D3'] = ‘APELLIDO PATERNO’&lt;br&gt;
        ws['E3'] = ‘APELLIDO MATERNO’&lt;br&gt;
        cont=4&lt;br&gt;
        #Recorremos el conjunto de personas y vamos escribiendo cada uno de los datos en las celdas&lt;br&gt;
        for persona in personas:&lt;br&gt;
            ws.cell(row=cont,column=2).value = persona.dni&lt;br&gt;
            ws.cell(row=cont,column=3).value = persona.nombre&lt;br&gt;
            ws.cell(row=cont,column=4).value = persona.apellido_paterno&lt;br&gt;
            ws.cell(row=cont,column=5).value = persona.apellido_materno&lt;br&gt;
            cont = cont + 1&lt;br&gt;
		#Establecemos el nombre del archivo&lt;br&gt;
        nombre_archivo ="ReportePersonasExcel.xlsx"&lt;br&gt;
		#Definimos que el tipo de respuesta a devolver es un archivo de microsoft excel&lt;br&gt;
        response = HttpResponse(content_type="application/ms-excel")&lt;br&gt;
		contenido = "attachment; filename={0}".format(nombre_archivo)&lt;br&gt;
        response["Content-Disposition"] = contenido&lt;br&gt;
        wb.save(response)&lt;br&gt;
        return response&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Modificamos el archivo urls.py:&lt;/p&gt;
&lt;p&gt;urls.py&lt;/p&gt;
&lt;p&gt;[sourcecode language="python"]&lt;br&gt;
from django.conf.urls import patterns, url&lt;br&gt;
from personas.views import Personas, CrearPersona, ReportePersonasExcel&lt;/p&gt;
&lt;p&gt;urlpatterns = patterns(”,&lt;br&gt;
    url(r’^$’,Personas.as_view(), name="personas"),&lt;br&gt;
    url(r’^crear_persona/$’,CrearPersona.as_view(), name="crear_persona"),&lt;br&gt;
    url(r’^reporte_personas_excel/$’,ReportePersonasExcel.as_view(), name="reporte_personas_excel"),&lt;/p&gt;
&lt;p&gt;)&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Finalmente nuestro archivo personas.html va a quedar de la siguiente manera:&lt;/p&gt;
&lt;p&gt;[sourcecode language="html"]&lt;br&gt;
{% extends "base.html" %}&lt;br&gt;
{% block cuerpo %}&lt;br&gt;
&amp;lt;div class="row"&amp;gt;&lt;br&gt;
    &amp;lt;div class="col-lg-12"&amp;gt;&lt;br&gt;
        &amp;lt;h1 class="page-header"&amp;gt;Tablas&amp;lt;/h1&amp;gt;&lt;br&gt;
    &amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;div class="row"&amp;gt;&lt;br&gt;
	&amp;lt;div class="col-lg-12"&amp;gt;&lt;br&gt;
		&amp;lt;div class="panel panel-info"&amp;gt;&lt;br&gt;
			&amp;lt;div class="panel-heading"&amp;gt;&lt;br&gt;
			    Personas&lt;br&gt;
			&amp;lt;/div&amp;gt;&lt;br&gt;
			&amp;lt;div class="panel-body"&amp;gt;&lt;br&gt;
				&amp;lt;div class=’form-group’&amp;gt;&lt;br&gt;
					&amp;lt;div class="row"&amp;gt;&lt;br&gt;
						&amp;lt;div class="col-lg-10"&amp;gt;	&lt;/p&gt;
&lt;p&gt;						&amp;lt;/div&amp;gt;&lt;br&gt;
						&amp;lt;div class="col-lg-1"&amp;gt;&lt;br&gt;
							&amp;lt;a id="crear_detalle" href="{% url ‘personas:reporte_personas_excel’ %}" class="btn btn-info btn-block"&amp;gt;&lt;br&gt;
								&amp;lt;span class="glyphicon glyphicon-list-alt"&amp;gt;&amp;lt;/span&amp;gt;&lt;br&gt;
							&amp;lt;/a&amp;gt;&lt;br&gt;
						&amp;lt;/div&amp;gt;&lt;br&gt;
						&amp;lt;div class="col-lg-1"&amp;gt;&lt;br&gt;
							&amp;lt;a id="crear_detalle" href="{% url ‘personas:crear_persona’ %}" class="btn btn-info btn-block"&amp;gt;&lt;br&gt;
								&amp;lt;span class="glyphicon glyphicon-plus"&amp;gt;&amp;lt;/span&amp;gt;&lt;br&gt;
							&amp;lt;/a&amp;gt;&lt;br&gt;
						&amp;lt;/div&amp;gt;&lt;br&gt;
					&amp;lt;/div&amp;gt;&lt;br&gt;
				&amp;lt;/div&amp;gt;&lt;br&gt;
				&amp;lt;div class="row"&amp;gt;&lt;br&gt;
					&amp;lt;div class="col-lg-12"&amp;gt;&lt;br&gt;
						&amp;lt;table id="tabla" class="table table-striped table-bordered" cellspacing="0" width="100%"&amp;gt;&lt;br&gt;
							&amp;lt;thead&amp;gt;&lt;br&gt;
								&amp;lt;tr&amp;gt;&lt;br&gt;
									&amp;lt;th class="text-center"&amp;gt;DNI&amp;lt;/th&amp;gt;&lt;br&gt;
									&amp;lt;th class="text-center"&amp;gt;NOMBRE&amp;lt;/th&amp;gt;&lt;br&gt;
									&amp;lt;th class="text-center"&amp;gt;APELLIDO PATERNO&amp;lt;/th&amp;gt;&lt;br&gt;
									&amp;lt;th class="text-center"&amp;gt;APELLIDO MATERNO&amp;lt;/th&amp;gt;&lt;br&gt;
								&amp;lt;/tr&amp;gt;&lt;br&gt;
							&amp;lt;/thead&amp;gt;&lt;br&gt;
							&amp;lt;tbody&amp;gt;&lt;br&gt;
							{% for persona in personas %}&lt;br&gt;
								&amp;lt;tr&amp;gt;&lt;br&gt;
									&amp;lt;td&amp;gt;{{ persona.dni }}&amp;lt;/td&amp;gt;&lt;br&gt;
									&amp;lt;td&amp;gt;{{ persona.nombre }}&amp;lt;/td&amp;gt;&lt;br&gt;
									&amp;lt;td&amp;gt;{{ persona.apellido_paterno }}&amp;lt;/td&amp;gt;&lt;br&gt;
									&amp;lt;td&amp;gt;{{ persona.apellido_materno }}&amp;lt;/td&amp;gt;&lt;br&gt;
								&amp;lt;/tr&amp;gt;&lt;br&gt;
							{% endfor %}&lt;br&gt;
							&amp;lt;/tbody&amp;gt;&lt;br&gt;
						&amp;lt;/table&amp;gt;&lt;br&gt;
					&amp;lt;/div&amp;gt;&lt;br&gt;
				&amp;lt;/div&amp;gt;&lt;br&gt;
			&amp;lt;/div&amp;gt;&lt;br&gt;
		&amp;lt;/div&amp;gt;&lt;br&gt;
	&amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;/div&amp;gt;&lt;br&gt;
{% endblock cuerpo %}&lt;br&gt;
{% block js %}&lt;br&gt;
&amp;lt;script&amp;gt;&lt;br&gt;
$(document).ready(function()&lt;br&gt;
{&lt;br&gt;
    var table = $(‘#tabla’).DataTable( {&lt;br&gt;
        "language": {&lt;br&gt;
        	url: "/static/localizacion/es_ES.json"&lt;br&gt;
        }&lt;br&gt;
    } );&lt;/p&gt;
&lt;p&gt;    $(‘#tabla tbody’).on( ‘click’, ‘tr’, function()&lt;br&gt;
    {&lt;br&gt;
    	if ($(this).hasClass(‘selected’) )&lt;br&gt;
        {&lt;br&gt;
        	$(this).removeClass(‘selected’);&lt;/p&gt;
&lt;p&gt;        }&lt;br&gt;
        else&lt;br&gt;
        {&lt;br&gt;
	        table.$(‘tr.selected’).removeClass(‘selected’);&lt;br&gt;
	        $(this).addClass(‘selected’);&lt;br&gt;
        }&lt;br&gt;
    });   &lt;/p&gt;
&lt;p&gt;});&lt;br&gt;
&amp;lt;/script&amp;gt;&lt;br&gt;
{% endblock js %}&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Y nuestro resultado al dar click al botón de exportar en excel será el siguiente:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/exportar.jpg"&gt;&lt;img class="alignnone wp-image-155" src="https://pythonpiura.files.wordpress.com/2016/04/exportar.jpg?w=300" alt="exportar" width="394" height="155"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Y el archivo se mostrará así:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/reporte_excel.jpg"&gt;&lt;img class="alignnone size-medium wp-image-156" src="https://pythonpiura.files.wordpress.com/2016/04/reporte_excel.jpg?w=300" alt="reporte_excel" width="300" height="84"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Hay muchísimas formas de sacarle el jugo a esta libreria, definir formatos, bordes, colores, etc. Esta ha sido una pequeña introducción, hasta la próxima.&lt;/p&gt;
&lt;p&gt;Saludos.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
</description><category>Django</category><guid>http://pythonpiura.org/posts/2016/04/19/generar-reportes-en-excel-desde-django/</guid><pubDate>Wed, 20 Apr 2016 02:24:58 GMT</pubDate></item><item><title>DataTables JQuery, Bootstrap y Django</title><link>http://pythonpiura.org/posts/2016/04/18/datatables-jquery-bootstrap-y-django/</link><dc:creator>Comunidad Python Piura</dc:creator><description>&lt;p style="text-align:justify;"&gt;Muchas veces al querer mostrar un listado o un conjunto de objetos, necesitamos hacer uso de tablas, esto lo podemos trabajar de manera sencilla usando una simple tabla html, pero que pasa cuando queremos tener mayores prestaciones, como búsquedas, ordenamiento paginación, etc. En este caso tenemos que recurrir a elementos mas avanzados, en internet podemos encontrar muchísimas aplicaciones con tablas que nos facilitan la vida, pero en esta oportunidad vamos a trabajar con una herramienta que nos ha parecido muy interesante y que nos ha resultado muy fácil de configurar y además trabaja con JQuery, la aplicación se llama &lt;a href="https://datatables.net/"&gt;DataTables &lt;/a&gt;y como su página dice es un plugin para JQuery, para empezar a trabajar debemos descargarla desde el siguiente &lt;a href="https://datatables.net/download/download"&gt;enlace.&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Para poder mostrar un sitio web mas o menos presentable vamos a echar mano de Bootstrap, como ya es bien conocido en el mundo del desarrollo web &lt;a href="http://getbootstrap.com/"&gt;Bootstrap &lt;/a&gt;es un framework que nos facilita el diseño de nuestras aplicaciones, contiene plantillas de diseño con tipografía, formularios, botones, cuadros, menús de navegación y otros elementos de diseño basado en HTML y CSS, así como, extensiones de JavaScript, la última versión la podemos descargar de &lt;a href="https://github.com/twbs/bootstrap/releases/download/v3.3.6/bootstrap-3.3.6-dist.zip"&gt;aquí&lt;/a&gt;.&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Ahora si, vamos a empezar creando nuestro proyecto en django, nosotros utilizamos como IDE Eclipse con pydev, si quieren una guía para configurarlo dense una vuelta por &lt;a href="http://www.pythondiario.com/2013/06/eclipse-y-pydev-configuracion-del-ide.html"&gt;aquí&lt;/a&gt;. Nuestro proyecto se llamará tutorial, dentro del proyecto vamos a crear la aplicación personas, de tal manera que tengamos la siguiente estructura:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/estructura.jpg" rel="attachment wp-att-143"&gt;&lt;img class="alignnone size-full wp-image-143" src="http://pythonpiura.org/2016/04/estructura.jpg" alt="Estructura" width="260" height="257"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Ahora vamos a crear una carpeta llamada static en la raiz del proyecto y dentro de ella vamos a crear las carpetas css, js, fonts, images y localizacion.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/estructura21.jpg" rel="attachment wp-att-145"&gt;&lt;img class="alignnone size-full wp-image-145" src="http://pythonpiura.org/2016/04/estructura21.jpg" alt="Estructura2" width="264" height="187"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Nos toca configurar el archivo settings para que nuestros archivos estáticos se muestren correctamente, agregamos la siguiente linea al final del archivo.&lt;/p&gt;
&lt;p&gt;settings.py&lt;br&gt;
[sourcecode language="python"]&lt;br&gt;
STATICFILES_DIRS = (&lt;br&gt;
os.path.join(BASE_DIR, ‘static’),&lt;br&gt;
)&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Y ahora como ya tenemos descargados tanto DataTables como Bootstrap los descomprimimos, en DataTables buscamos la carpeta media, aquí encontraremos las carpetas css, images y js, vamos a trabajar de la manera mas sencilla que podamos por lo que no vamos a necesitar todo el contenido de las carpetas antes mencionadas, así que de la carpeta css seleccionamos el archivo jquery.dataTables.min.css y lo copiamos a la carpeta css de nuestro proyecto, de la carpeta js seleccionamos los archivos jquery.js y jquery.dataTables.min.js y los copiamos a la carpeta js de nuestro proyecto,el contenido de la carpeta images si lo copiamos integro dentro de nuestra carpeta images. Lo mismo hacemos con Bootstrap copiamos los archivos bootstrap.min.css y bootstrap.min.css.map a nuestra carpeta css, copiamos todo el contenido de la carpeta fonts a nuestra carpeta fonts y finalmente copiamos el archivo bootstrap.min.js a nuestra carpeta js.&lt;br&gt;
Adicionalmente a esto debemos copiar el contenido del siguiente &lt;a href="https://www.datatables.net/plug-ins/i18n/Spanish"&gt;enlace&lt;/a&gt; y crear un archivo en la carpeta localización que en este caso le hemos llamado es_ES.json, esto sirve para traducir DataTables al español.&lt;/p&gt;
&lt;p style="text-align:justify;"&gt;Finalmente tendremos lo siguiente dentro de nuestra carpeta static:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/estructurastatic.jpg" rel="attachment wp-att-146"&gt;&lt;img class="alignnone size-medium wp-image-146" src="https://pythonpiura.files.wordpress.com/2016/04/estructurastatic.jpg?w=163" alt="EstructuraStatic" width="163" height="300"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ahora vamos a crear una carpeta llamada templates que va a contener nuestras plantillas html dentro de la aplicación personas. Dentro de esta carpeta creamos un archivo llamado base.html que va a ser la plantilla madre de la que heredarán las demás, este archivo tendrá el siguiente contenido:&lt;br&gt;
[sourcecode language="html"]&lt;br&gt;
{% load staticfiles %}&lt;br&gt;
&amp;lt;!DOCTYPE html&amp;gt;&lt;br&gt;
&amp;lt;html&amp;gt;&lt;br&gt;
	&amp;lt;head&amp;gt;&lt;br&gt;
		Ejemplo Círculo de Programadores de Python Piura&lt;br&gt;
		&amp;lt;link rel="stylesheet" type="text/css" href="{% static "css/bootstrap.min.css" %}"&amp;gt;&lt;br&gt;
		&amp;lt;link rel="stylesheet" type="text/css" href="{% static "css/jquery.dataTables.min.css"  %}"  /&amp;gt;&lt;br&gt;
		&amp;lt;script src="{% static "js/jquery.js" %}"&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;
		&amp;lt;script src="{% static "js/bootstrap.min.js" %}"&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;
		&amp;lt;script src="{% static "js/jquery.dataTables.min.js" %}"&amp;gt;&amp;lt;/script&amp;gt;&lt;br&gt;
	&amp;lt;/head&amp;gt;&lt;br&gt;
	&amp;lt;body&amp;gt;&lt;br&gt;
	&amp;lt;div id="page-wrapper"&amp;gt;&lt;br&gt;
		&amp;lt;div class="container-fluid"&amp;gt;&lt;br&gt;
		{% block cuerpo %}&lt;br&gt;
		{% endblock cuerpo %}&lt;br&gt;
		&amp;lt;/div&amp;gt;&lt;br&gt;
	&amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;/body&amp;gt;&lt;br&gt;
{% block js %}&lt;br&gt;
{% endblock js %}&lt;br&gt;
&amp;lt;/html&amp;gt;&lt;br&gt;
[/sourcecode]&lt;br&gt;
Vamos a modificar el archivo urls.py del proyecto de tal manera que al correrlo este apunte directamente a nuestra aplicación personas:&lt;/p&gt;
&lt;p&gt;urls.py&lt;br&gt;
[sourcecode language="python"]&lt;br&gt;
from django.conf.urls import include, url&lt;br&gt;
 from django.contrib import admin&lt;/p&gt;
&lt;p&gt;urlpatterns = [&lt;br&gt;
 url(r'^admin/', include(admin.site.urls)),&lt;br&gt;
 url(r'^', include('personas.urls',namespace='personas')),&lt;br&gt;
 ]&lt;br&gt;
[/sourcecode]&lt;br&gt;
Ahora crearemos nuestro modelo y unas vistas bastante simples, en el archivo models.py de la aplicación personas, creamos el modelo Persona:&lt;/p&gt;
&lt;p&gt;models.py&lt;br&gt;
[sourcecode language="python"]&lt;br&gt;
from django.db import models&lt;/p&gt;
&lt;p&gt;# Create your models here.&lt;br&gt;
 class Persona(models.Model):&lt;br&gt;
    dni= models.CharField(primary_key=True,max_length=8)&lt;br&gt;
    nombre = models.CharField(max_length=100)&lt;br&gt;
    apellido_paterno = models.CharField(max_length=100)&lt;br&gt;
    apellido_materno = models.CharField(max_length=100)&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Creamos dos vistas con sus respectivas urls:&lt;br&gt;
views.py&lt;br&gt;
[sourcecode language="python"]&lt;/p&gt;
&lt;p&gt;from personas.models import Persona&lt;br&gt;
from django.core.urlresolvers import reverse_lazy&lt;br&gt;
from django.views.generic.edit import CreateView&lt;br&gt;
from django.views.generic.list import ListView&lt;/p&gt;
&lt;p&gt;# Create your views here.&lt;br&gt;
class CrearPersona(CreateView):&lt;br&gt;
    model = Persona&lt;br&gt;
    fields =['dni','nombre','apellido_paterno','apellido_materno']&lt;br&gt;
    template_name = ‘crear_persona.html’&lt;br&gt;
    success_url = reverse_lazy(‘personas:personas’)&lt;/p&gt;
&lt;p&gt;class Personas(ListView):&lt;br&gt;
    model = Persona&lt;br&gt;
    template_name = ‘personas.html’&lt;br&gt;
    context_object_name = ‘personas’ &lt;/p&gt;
&lt;p&gt;[/sourcecode]&lt;br&gt;
urls.py&lt;br&gt;
[sourcecode language="python"]&lt;br&gt;
from django.conf.urls import patterns, url&lt;br&gt;
from personas.views import Personas, CrearPersona&lt;/p&gt;
&lt;p&gt;urlpatterns = patterns(”,&lt;br&gt;
    url(r’^crear_persona/$’,CrearPersona.as_view(), name="crear_persona"),&lt;br&gt;
    url(r’^',Personas.as_view(), name="personas"),&lt;br&gt;
)&lt;br&gt;
[/sourcecode]&lt;br&gt;
Ahora debemos crear la plantilla:&lt;/p&gt;
&lt;p&gt;personas.html&lt;br&gt;
[sourcecode language="html"]&lt;br&gt;
{% extends "base.html" %}&lt;br&gt;
{% block cuerpo %}&lt;br&gt;
&amp;lt;div class="row"&amp;gt;&lt;br&gt;
    &amp;lt;div class="col-lg-12"&amp;gt;&lt;br&gt;
        &amp;lt;h1 class="page-header"&amp;gt;Tablas&amp;lt;/h1&amp;gt;&lt;br&gt;
    &amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;div class="row"&amp;gt;&lt;br&gt;
	&amp;lt;div class="col-lg-12"&amp;gt;&lt;br&gt;
		&amp;lt;div class="panel panel-info"&amp;gt;&lt;br&gt;
			&amp;lt;div class="panel-heading"&amp;gt;&lt;br&gt;
			    Personas&lt;br&gt;
			&amp;lt;/div&amp;gt;&lt;br&gt;
			&amp;lt;div class="panel-body"&amp;gt;&lt;br&gt;
				&amp;lt;div class=’form-group’&amp;gt;&lt;br&gt;
					&amp;lt;div class="row"&amp;gt;&lt;br&gt;
						&amp;lt;div class="col-lg-3"&amp;gt;	&lt;/p&gt;
&lt;p&gt;						&amp;lt;/div&amp;gt;&lt;br&gt;
						&amp;lt;div class="col-lg-8"&amp;gt;&lt;/p&gt;
&lt;p&gt;						&amp;lt;/div&amp;gt;&lt;br&gt;
						&amp;lt;div class="col-lg-1"&amp;gt;&lt;br&gt;
							&amp;lt;a id="crear_detalle" href="{% url ‘tablas:crear_persona’ %}" class="btn btn-info btn-block"&amp;gt;&lt;br&gt;
								&amp;lt;span class="glyphicon glyphicon-plus"&amp;gt;&amp;lt;/span&amp;gt;&lt;br&gt;
							&amp;lt;/a&amp;gt;&lt;br&gt;
						&amp;lt;/div&amp;gt;&lt;br&gt;
					&amp;lt;/div&amp;gt;&lt;br&gt;
				&amp;lt;/div&amp;gt;&lt;br&gt;
				&amp;lt;div class="row"&amp;gt;&lt;br&gt;
					&amp;lt;div class="col-lg-12"&amp;gt;&lt;br&gt;
						&amp;lt;table id="tabla" class="table table-striped table-bordered" cellspacing="0" width="100%"&amp;gt;&lt;br&gt;
							&amp;lt;thead&amp;gt;&lt;br&gt;
								&amp;lt;tr&amp;gt;&lt;br&gt;
									&amp;lt;th class="text-center"&amp;gt;DNI&amp;lt;/th&amp;gt;&lt;br&gt;
									&amp;lt;th class="text-center"&amp;gt;NOMBRE&amp;lt;/th&amp;gt;&lt;br&gt;
									&amp;lt;th class="text-center"&amp;gt;APELLIDO PATERNO&amp;lt;/th&amp;gt;&lt;br&gt;
									&amp;lt;th class="text-center"&amp;gt;APELLIDO MATERNO&amp;lt;/th&amp;gt;&lt;br&gt;
								&amp;lt;/tr&amp;gt;&lt;br&gt;
							&amp;lt;/thead&amp;gt;&lt;br&gt;
							&amp;lt;tbody&amp;gt;&lt;br&gt;
							{% for persona in personas %}&lt;br&gt;
								&amp;lt;tr&amp;gt;&lt;br&gt;
									&amp;lt;td&amp;gt;{{ persona.dni }}&amp;lt;/td&amp;gt;&lt;br&gt;
									&amp;lt;td&amp;gt;{{ persona.nombre }}&amp;lt;/td&amp;gt;&lt;br&gt;
									&amp;lt;td&amp;gt;{{ persona.apellido_paterno }}&amp;lt;/td&amp;gt;&lt;br&gt;
									&amp;lt;td&amp;gt;{{ persona.apellido_materno }}&amp;lt;/td&amp;gt;&lt;br&gt;
								&amp;lt;/tr&amp;gt;&lt;br&gt;
							{% endfor %}&lt;br&gt;
							&amp;lt;/tbody&amp;gt;&lt;br&gt;
						&amp;lt;/table&amp;gt;&lt;br&gt;
					&amp;lt;/div&amp;gt;&lt;br&gt;
				&amp;lt;/div&amp;gt;&lt;br&gt;
			&amp;lt;/div&amp;gt;&lt;br&gt;
		&amp;lt;/div&amp;gt;&lt;br&gt;
	&amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;/div&amp;gt;&lt;br&gt;
{% endblock cuerpo %}&lt;br&gt;
{% block js %}&lt;br&gt;
&amp;lt;script&amp;gt;&lt;br&gt;
$(document).ready(function()&lt;br&gt;
{&lt;br&gt;
    var table = $(‘#tabla’).DataTable( {&lt;br&gt;
        "language": {&lt;br&gt;
        	url: "/static/localizacion/es_ES.json"&lt;br&gt;
        }&lt;br&gt;
    } );&lt;/p&gt;
&lt;p&gt;    $(‘#tabla tbody’).on( ‘click’, ‘tr’, function()&lt;br&gt;
    {&lt;br&gt;
    	if ($(this).hasClass(‘selected’) )&lt;br&gt;
        {&lt;br&gt;
        	$(this).removeClass(‘selected’);&lt;/p&gt;
&lt;p&gt;        }&lt;br&gt;
        else&lt;br&gt;
        {&lt;br&gt;
	        table.$(‘tr.selected’).removeClass(‘selected’);&lt;br&gt;
	        $(this).addClass(‘selected’);&lt;br&gt;
        }&lt;br&gt;
    });   &lt;/p&gt;
&lt;p&gt;});&lt;br&gt;
&amp;lt;/script&amp;gt;&lt;br&gt;
{% endblock js %}&lt;br&gt;
[/sourcecode]&lt;br&gt;
Como hemos visto lineas arriba es en esta plantilla donde se hace uso de DataTables, primero se crea la tabla teniendo en cuenta que se la ha puesto el id “tabla” y además se hace la traducción al español invocando al archivo es_ES.json:&lt;br&gt;
[sourcecode language="js"]&lt;br&gt;
    var table = $(‘#tabla’).DataTable( {&lt;br&gt;
        "language": {&lt;br&gt;
        	url: "/static/localizacion/es_ES.json"&lt;br&gt;
        }&lt;br&gt;
    } );&lt;br&gt;
[/sourcecode]&lt;br&gt;
Lo siguiente es un efecto que se le da al seleccionar una de las filas de la tabla.&lt;/p&gt;
&lt;p&gt;Y finalmente creamos el archivo:&lt;br&gt;
crear_persona.html&lt;br&gt;
[sourcecode language="html"]&lt;br&gt;
{% extends "base.html" %}&lt;br&gt;
{% block cuerpo %}&lt;/p&gt;
&lt;p&gt;&amp;lt;div class="row"&amp;gt;&lt;br&gt;
    &amp;lt;div class="col-lg-12"&amp;gt;&lt;br&gt;
        &amp;lt;h1 class="page-header"&amp;gt;Tablas&amp;lt;/h1&amp;gt;&lt;br&gt;
    &amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;div class="row"&amp;gt;&lt;br&gt;
	&amp;lt;div class="col-lg-12"&amp;gt;&lt;br&gt;
		&amp;lt;div class="panel panel-default"&amp;gt;&lt;br&gt;
			&amp;lt;div class="panel-heading"&amp;gt;&lt;br&gt;
			    Crear Persona&lt;br&gt;
			&amp;lt;/div&amp;gt;&lt;br&gt;
			&amp;lt;div class="panel-body"&amp;gt;&lt;br&gt;
				&amp;lt;form role="form" action="#" method="post"&amp;gt;&lt;br&gt;
					{% csrf_token %}&lt;br&gt;
					&amp;lt;div class="form-group"&amp;gt;&lt;br&gt;
						{{ form.as_p }}&lt;br&gt;
					&amp;lt;/div&amp;gt;&lt;br&gt;
					&amp;lt;div class=’form-group’&amp;gt;&lt;br&gt;
						&amp;lt;input type="submit" class="btn btn-primary" name="submit" value="Crear Persona"&amp;gt;&lt;br&gt;
						&amp;lt;button type="reset" class="btn btn-primary" onclick="location.href=’{% url ‘personas:personas’ %}’"&amp;gt;&lt;br&gt;
						    Cancelar&lt;br&gt;
						&amp;lt;/button&amp;gt;&lt;br&gt;
					&amp;lt;/div&amp;gt;&lt;br&gt;
				&amp;lt;/form&amp;gt;&lt;br&gt;
			&amp;lt;/div&amp;gt;&lt;br&gt;
		&amp;lt;/div&amp;gt;&lt;br&gt;
	&amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;/div&amp;gt;&lt;br&gt;
&amp;lt;div id="popup"&amp;gt;&amp;lt;/div&amp;gt;&lt;br&gt;
{% endblock cuerpo %}&lt;/p&gt;
&lt;p&gt;{% block js %}&lt;/p&gt;
&lt;p&gt;{% endblock js %}&lt;br&gt;
[/sourcecode]&lt;/p&gt;
&lt;p&gt;Hacemos las migraciones correspondientes de nuestros modelos y finalmente corremos el servidor de prueba, si todo ha salido bien tendremos una aplicación como la siguiente:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonpiura.org/2016/04/aplicacion.jpg" rel="attachment wp-att-147"&gt;&lt;img class="alignnone size-medium wp-image-147" src="https://pythonpiura.files.wordpress.com/2016/04/aplicacion.jpg?w=300" alt="aplicacion" width="300" height="120"&gt;&lt;/a&gt;&lt;/p&gt;
</description><category>Django</category><guid>http://pythonpiura.org/posts/2016/04/18/datatables-jquery-bootstrap-y-django/</guid><pubDate>Tue, 19 Apr 2016 03:35:28 GMT</pubDate></item></channel></rss>